user www-data;
pid /run/nginx.pid;
include /etc/nginx/modules-enabled/*.conf;

# Значение auto устанавливает число максимально доступных ядер CPU,
# чтобы обеспечить лучшую производительность.
worker_processes    auto;

events {
  worker_connections 1024;
	# включим параллельное подключение мн-ва соединений
	multi_accept on;
	use epoll;
}

http {
  include /etc/nginx/mime.types;
  default_type application/octet-stream;
# настроим кодировку
  charset utf-8;
  sendfile on;
# настроим кэширование
  open_file_cache             max=1000 inactive=20s;
  open_file_cache_valid       30s;
  open_file_cache_min_uses    2;
# Будет кешировать информацию об отсутствующих файлах
  open_file_cache_errors      on;

  tcp_nopush on;
  tcp_nodelay on;
# Будет ждать  65 секунд перед закрытием keepalive соединения
  keepalive_timeout 65;
# Максимальное количество keepalive запросов от одного клиента
  keepalive_requests 100;
  types_hash_max_size 2048;
  server_tokens off;

  # server_names_hash_bucket_size 64;
  # server_name_in_redirect off;
  ##
  # SSL Settings
  ##

  ssl_protocols TLSv1 TLSv1.1 TLSv1.2; # Dropping SSLv3, ref: POODLE
  ssl_prefer_server_ciphers on;
  ##
  # Logging Settings
  ##

  access_log /var/log/nginx/access.log;
# по завершению настройки отключить
#	access_log off;
  error_log /var/log/nginx/error.log;
# по завершению настройки включить
#	error_log /var/log/nginx/error.log crit;

#  map $request_uri $rot {
#      "~admin" /var/www/pc26.ru/admin;
#      default /var/www/pc26.ru/planning-front-end;
#  }
	server{
    root /var/www/pc26.ru;

    listen 80 default_server;
    listen [::]:80 default_server ipv6only=on;

    listen 443 ssl;

    server_name pc26.ru www.pc26.ru;
    ssl_certificate /etc/nginx/ssl/nginx.crt;
    ssl_certificate_key /etc/nginx/ssl/nginx.key;
    gzip on;
    gzip_min_length 100;
    gzip_comp_level 3;

    gzip_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript application/javascript;
    gzip_disable "msie6";

    if ($http_user_agent ~* badbot){
      return 403;
    }
    index index.html;
    location / {
      try_files $uri $uri/ =404;
    }
    location /testing {
      return 200 "Testing nginx servers pc26.ru";
    }
    location ~* \.css|.svg|.jpg$ {
      access_log off;
      expires 1M;
      add_header Pragma public;
      add_header Cache-Control public;
      add_header Vary Accept-Encoding;
    }
    location =/album {
      auth_basic "Restricted Contenet";
      auth_basic_user_file /etc/nginx/.htpasswd;
      try_files $uri/ =404;
    }

    location =/plan {
      auth_basic "Restricted Contenet";
      auth_basic_user_file /etc/nginx/.htpasswd;
      rewrite ^ https://pc26.ru/planning-front-end;
    }

    location /api/ {
      client_max_body_size 32M;

      if ($request_method = 'OPTIONS') {
        add_header 'Access-Control-Allow-Origin' '*' always;
        add_header 'Access-Cotnrol-Allow-Credentials' 'true';
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE';
        add_header 'Access-Control-Allow-Headers' 'Origin,Content-Type,Accept,Authorization,If-Modified-Since,Pragma,Cache-Control';
        add_header 'Access-Control-Max-Age' 1728000;
        add_header 'Content-Type' 'text/plain charset=UTF-8';
        add_header 'Content-Length' 0;
        return 204;
      }

      if ($request_method = 'POST') {
        add_header 'Access-Control-Allow-Origin' '*' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
        add_header 'Access-Control-Allow-Headers' 'Origin,Referer,DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
        add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range';
      }

      if ($request_method = 'GET') {
        add_header 'Access-Control-Allow-Origin' '*' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
        add_header 'Access-Control-Allow-Headers' 'Origin,Referer,DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
        add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range';
      }

      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_pass http://127.0.0.1:8090/;
      proxy_read_timeout 120s;
    }
  }
}
