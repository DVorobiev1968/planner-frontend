{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/auth/edit-user/edit-user.component.ts","./src/app/auth/edit-user/edit-user.component.html","./src/app/auth/helper/auth-guard.service.ts","./src/app/auth/helper/auth-interceptor.service.ts","./src/app/auth/helper/error-interceptor.service.ts","./src/app/auth/list-users/list-users.component.ts","./src/app/auth/list-users/list-users.component.html","./src/app/auth/login/login.component.ts","./src/app/auth/login/login.component.html","./src/app/auth/register-with-roles/register-with-roles.component.ts","./src/app/auth/register-with-roles/register-with-roles.component.html","./src/app/auth/register/register.component.ts","./src/app/auth/register/register.component.html","./src/app/documents/add-document/add-document.component.ts","./src/app/documents/add-document/add-document.component.html","./src/app/documents/list-documents/list-documents.component.ts","./src/app/documents/list-documents/list-documents.component.html","./src/app/documents/list-react-docs/list-react-docs.component.ts","./src/app/documents/list-react-docs/list-react-docs.component.html","./src/app/layout/index/index.component.ts","./src/app/layout/index/index.component.html","./src/app/layout/navigation/navigation.component.ts","./src/app/layout/navigation/navigation.component.html","./src/app/material-module.ts","./src/app/models/DocumentModel.ts","./src/app/models/ERole.ts","./src/app/models/ICategory.ts","./src/app/models/IEmployee.ts","./src/app/models/Priority.ts","./src/app/models/RouteTask.ts","./src/app/models/User.ts","./src/app/priority/list-priority/list-priority.component.ts","./src/app/priority/list-priority/list-priority.component.html","./src/app/route/add-route/add-route.component.ts","./src/app/route/add-route/add-route.component.html","./src/app/route/list-route/list-route.component.ts","./src/app/route/list-route/list-route.component.html","./src/app/service/Codes.ts","./src/app/service/Conf.ts","./src/app/service/auth.service.ts","./src/app/service/category.service.ts","./src/app/service/date.service.ts","./src/app/service/document-upload.service.ts","./src/app/service/employee.service.ts","./src/app/service/notification.service.ts","./src/app/service/priority.service.ts","./src/app/service/route.service.ts","./src/app/service/task.service.ts","./src/app/service/token-storage.service.ts","./src/app/service/user.service.ts","./src/app/shared/moment.pipe.ts","./src/app/task/add-task/add-task.component.ts","./src/app/task/add-task/add-task.component.html","./src/app/task/delete-task/delete-task.component.ts","./src/app/task/delete-task/delete-task.component.html","./src/app/task/dialog/dialog.component.ts","./src/app/task/dialog/dialog.component.html","./src/app/task/edit-task/edit-task.component.ts","./src/app/task/edit-task/edit-task.component.html","./src/app/task/list-task/list-task.component.ts","./src/app/task/list-task/list-task.component.html","./src/app/task/send-task/send-task.component.ts","./src/app/task/send-task/send-task.component.html","./src/environments/environment.ts","./src/main.ts","./node_modules/moment/locale|sync|/^/.*$","ignored|C:\\Users\\User\\AngularProject\\planning-front-end\\node_modules\\xlsx|crypto","ignored|C:\\Users\\User\\AngularProject\\planning-front-end\\node_modules\\xlsx|fs","ignored|C:\\Users\\User\\AngularProject\\planning-front-end\\node_modules\\xlsx|stream"],"sourcesContent":["import {NgModule} from '@angular/core';\r\nimport {RouterModule, Routes} from '@angular/router';\r\nimport {LoginComponent} from \"./auth/login/login.component\";\r\nimport {RegisterComponent} from \"./auth/register/register.component\";\r\nimport {IndexComponent} from \"./layout/index/index.component\";\r\nimport {AuthGuardService} from \"./auth/helper/auth-guard.service\";\r\nimport {ListTaskComponent} from \"./task/list-task/list-task.component\";\r\nimport {AddTaskComponent} from \"./task/add-task/add-task.component\";\r\nimport {DeleteTaskComponent} from \"./task/delete-task/delete-task.component\";\r\nimport {DialogComponent} from \"./task/dialog/dialog.component\";\r\nimport {EditTaskComponent} from \"./task/edit-task/edit-task.component\";\r\nimport {ListDocumentsComponent} from \"./documents/list-documents/list-documents.component\";\r\nimport {AddDocumentComponent} from './documents/add-document/add-document.component';\r\nimport {SendTaskComponent} from \"./task/send-task/send-task.component\";\r\nimport {AddRouteComponent} from \"./route/add-route/add-route.component\";\r\nimport {ListRouteComponent} from './route/list-route/list-route.component';\r\nimport {ListReactDocsComponent} from \"./documents/list-react-docs/list-react-docs.component\";\r\nimport {RegisterWithRolesComponent} from \"./auth/register-with-roles/register-with-roles.component\";\r\nimport {ListUsersComponent} from \"./auth/list-users/list-users.component\";\r\nimport {EditUserComponent} from \"./auth/edit-user/edit-user.component\";\r\nimport {ListPriorityComponent} from \"./priority/list-priority/list-priority.component\";\r\n\r\nconst routes: Routes = [\r\n  {path: 'app-login', component: LoginComponent},\r\n  {path: 'register', component: RegisterComponent},\r\n  {path: 'app-register-with-roles', component: RegisterWithRolesComponent, canActivate: [AuthGuardService]},\r\n  {path: 'app-list-users', component: ListUsersComponent, canActivate: [AuthGuardService]},\r\n  {path: 'app-edit-user', component: EditUserComponent, canActivate: [AuthGuardService]},\r\n  {path: 'main', component: IndexComponent, canActivate: [AuthGuardService]},\r\n  {path: 'add-task', component: AddTaskComponent, canActivate: [AuthGuardService]},\r\n  {path: 'edit-task', component: EditTaskComponent, canActivate: [AuthGuardService]},\r\n  {path: 'app-send-task', component: SendTaskComponent, canActivate: [AuthGuardService]},\r\n  {path: 'tasks', component: ListTaskComponent, canActivate: [AuthGuardService]},\r\n  {path: 'delete-task', component: DeleteTaskComponent, canActivate: [AuthGuardService]},\r\n  {path: 'app-dialog', component: DialogComponent, canActivate: [AuthGuardService]},\r\n  {path: 'app-list-documents', component: ListDocumentsComponent, canActivate: [AuthGuardService]},\r\n  {path: 'app-list-react-docs', component: ListReactDocsComponent, canActivate: [AuthGuardService]},\r\n  {path: 'app-add-document', component: AddDocumentComponent, canActivate: [AuthGuardService]},\r\n  {path: 'app-add-route', component: AddRouteComponent, canActivate: [AuthGuardService]},\r\n  {path: 'app-list-route', component: ListRouteComponent, canActivate: [AuthGuardService]},\r\n  {path: 'app-list-priority', component: ListPriorityComponent, canActivate: [AuthGuardService]},\r\n  {path: '', redirectTo: 'main', pathMatch: 'full'},\r\n  {path: 'logout', redirectTo: 'app-login'}\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule {\r\n}\r\n","import { Component } from '@angular/core';\nimport {Router} from \"@angular/router\";\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  router: Router;\n}\n","<div>\r\n<!--  <app-menu></app-menu>-->\r\n  <app-navigation></app-navigation>\r\n<!--  <list-task></list-task>-->\r\n<!--  TODO -->\r\n<!--  убрал, т.к. по логике происходит зацикливание со входом в систему, надо разобраться-->\r\n<!--  <app-index></app-index>-->\r\n  <router-outlet></router-outlet>\r\n<!--  <mat-slider min=\"1\" max=\"100\" step=\"1\" value=\"50\"></mat-slider>-->\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport {FormsModule, ReactiveFormsModule} from \"@angular/forms\";\r\nimport {MaterialModule} from \"./material-module\";\r\nimport {HTTP_INTERCEPTORS, HttpClientModule} from \"@angular/common/http\";\r\nimport {authInterceptorProviders} from \"./auth/helper/auth-interceptor.service\";\r\nimport {authErrorInterceptorProviders} from \"./auth/helper/error-interceptor.service\";\r\nimport { LoginComponent } from './auth/login/login.component';\r\nimport { RegisterComponent } from './auth/register/register.component';\r\nimport { NavigationComponent } from './layout/navigation/navigation.component';\r\nimport { IndexComponent } from './layout/index/index.component';\r\nimport { AddTaskComponent } from './task/add-task/add-task.component';\r\nimport { ListTaskComponent } from './task/list-task/list-task.component';\r\nimport { MatSliderModule } from '@angular/material/slider';\r\nimport { DeleteTaskComponent } from './task/delete-task/delete-task.component';\r\nimport { DialogComponent } from './task/dialog/dialog.component';\r\nimport { MomentPipe } from './shared/moment.pipe';\r\nimport { EditTaskComponent } from './task/edit-task/edit-task.component';\r\nimport { ListDocumentsComponent } from './documents/list-documents/list-documents.component';\r\nimport { AddDocumentComponent } from './documents/add-document/add-document.component';\r\nimport { SendTaskComponent } from './task/send-task/send-task.component';\r\nimport { AddRouteComponent } from './route/add-route/add-route.component';\r\nimport { ListRouteComponent } from './route/list-route/list-route.component';\r\nimport { ListReactDocsComponent } from './documents/list-react-docs/list-react-docs.component';\r\nimport { RegisterWithRolesComponent } from './auth/register-with-roles/register-with-roles.component';\r\nimport { ListUsersComponent } from './auth/list-users/list-users.component';\r\nimport { EditUserComponent } from './auth/edit-user/edit-user.component';\r\nimport { ListPriorityComponent } from './priority/list-priority/list-priority.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    LoginComponent,\r\n    RegisterComponent,\r\n    NavigationComponent,\r\n    IndexComponent,\r\n    AddTaskComponent,\r\n    ListTaskComponent,\r\n    DeleteTaskComponent,\r\n    DialogComponent,\r\n    MomentPipe,\r\n    EditTaskComponent,\r\n    ListDocumentsComponent,\r\n    AddDocumentComponent,\r\n    MomentPipe,\r\n    SendTaskComponent,\r\n    AddRouteComponent,\r\n    ListRouteComponent,\r\n    ListReactDocsComponent,\r\n    RegisterWithRolesComponent,\r\n    ListUsersComponent,\r\n    EditUserComponent,\r\n    ListPriorityComponent\r\n  ],\r\n  imports: [\r\n    AppRoutingModule,\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    ReactiveFormsModule,\r\n    MaterialModule,\r\n    HttpClientModule,\r\n    FormsModule,\r\n    MatSliderModule\r\n  ],\r\n  providers: [\r\n    authInterceptorProviders,\r\n    authErrorInterceptorProviders\r\n  ],\r\n\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {FormBuilder, FormGroup, Validators} from \"@angular/forms\";\r\nimport {Role} from \"../../models/ERole\";\r\nimport {AuthService} from \"../../service/auth.service\";\r\nimport {NotificationService} from \"../../service/notification.service\";\r\nimport {UserService} from \"../../service/user.service\";\r\nimport {Router} from \"@angular/router\";\r\n\r\n@Component({\r\n  selector: 'app-edit-user',\r\n  templateUrl: './edit-user.component.html',\r\n  styleUrls: ['./edit-user.component.css']\r\n})\r\nexport class EditUserComponent implements OnInit {\r\n  public  registerForm:FormGroup;\r\n  roles:Role\r\n  selectItems:string[];\r\n\r\n  constructor(\r\n    private authService: AuthService,\r\n    private userService:UserService,\r\n    private notificationService: NotificationService,\r\n    private router: Router,\r\n    private fb: FormBuilder\r\n  ) {\r\n    this.roles=new Role();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.registerForm=this.createRegisterForm();\r\n  }\r\n  createRegisterForm(): FormGroup {\r\n    return this.fb.group({\r\n      email: [this.userService.user.email, Validators.compose([Validators.required, Validators.email])],\r\n      username: [this.userService.user.username, Validators.compose([Validators.required])],\r\n      firstname: [this.userService.user.firstname, Validators.compose([Validators.required])],\r\n      lastname: [this.userService.user.lastname, Validators.compose([Validators.required])],\r\n      patronymic: [this.userService.user.patronymic, Validators.compose([Validators.required])],\r\n      initial: [this.userService.user.initial, Validators.compose([Validators.required])],\r\n      roles:[this.roles.roles]\r\n    });\r\n  }\r\n\r\n  setRoles(){\r\n    this.registerForm.value.roles.forEach(item=>{\r\n      this.setRole(item);\r\n    })\r\n  }\r\n  setRole(index:number){\r\n    this.roles.roles[index].active=true;\r\n  }\r\n\r\n  submit(): void {\r\n    this.setRoles();\r\n\r\n    this.authService.updateUser({\r\n      id:this.userService.user.id,\r\n      email: this.registerForm.value.email,\r\n      username: this.registerForm.value.username,\r\n      firstname: this.registerForm.value.firstname,\r\n      lastname: this.registerForm.value.lastname,\r\n      patronymic:this.registerForm.value.patronymic,\r\n      initial:this.registerForm.value.initial,\r\n      roles:this.roles.roles\r\n    }).subscribe(data => {\r\n      this.notificationService.showSnackBar(data.message);\r\n    }, error => {\r\n      this.notificationService.showSnackBar('Что-то пошло не так при регистрации'+error.message);\r\n    });\r\n    this.router.navigate(['app-list-users']);\r\n  }\r\n}\r\n","<div class=\"register-page\">\r\n  <h2>Редактирование учетных данных пользователя</h2>\r\n  <form [formGroup]=\"registerForm\">\r\n    <div class=\"justify-content-center\">\r\n      <mat-form-field appearance=\"outline\">\r\n        <mat-label>Email</mat-label>\r\n        <input matInput\r\n               formControlName=\"email\">\r\n      </mat-form-field>\r\n    </div>\r\n    <div class=\"justify-content-center\">\r\n      <mat-form-field appearance=\"outline\">\r\n        <mat-label>Имя пользователя в системе</mat-label>\r\n        <input matInput\r\n               formControlName=\"username\">\r\n      </mat-form-field>\r\n    </div>\r\n    <div class=\"justify-content-center\">\r\n      <mat-form-field appearance=\"outline\">\r\n        <mat-label>Имя</mat-label>\r\n        <input matInput\r\n               formControlName=\"firstname\">\r\n      </mat-form-field>\r\n    </div>\r\n    <div class=\"justify-content-center\">\r\n      <mat-form-field appearance=\"outline\">\r\n        <mat-label>Фамилия</mat-label>\r\n        <input matInput\r\n               formControlName=\"lastname\">\r\n      </mat-form-field>\r\n    </div>\r\n    <div class=\"justify-content-center\">\r\n      <mat-form-field appearance=\"outline\">\r\n        <mat-label>Отчество</mat-label>\r\n        <input matInput\r\n               formControlName=\"patronymic\">\r\n      </mat-form-field>\r\n    </div>\r\n    <div class=\"justify-content-center\">\r\n      <mat-form-field appearance=\"outline\">\r\n        <mat-label>Инициалы (Имя. Отчество.)</mat-label>\r\n        <input matInput [maxLength]=4\r\n               formControlName=\"initial\">\r\n        <mat-hint>(Имя. Отчество.)</mat-hint>\r\n      </mat-form-field>\r\n    </div>\r\n    <div class=\"roles_area\">\r\n      <mat-form-field appearance=\"fill\">\r\n        <mat-label>Роли в системе</mat-label>\r\n        <mat-select [(value)]=\"selectItems\" formControlName=\"roles\" multiple>\r\n          <mat-option *ngFor=\"let role of roles.roles; let i=index\"\r\n                      [value]=\"role.id\">\r\n            {{role.title}}</mat-option>\r\n        </mat-select>\r\n      </mat-form-field>\r\n    </div>\r\n\r\n    <button [disabled]=\"registerForm.invalid\" (click)=\"submit()\" mat-flat-button color=\"primary\">\r\n      Обновить\r\n    </button>\r\n  </form>\r\n  <a class=\"btn btn-warning\" routerLink=\"/app-list-users\">Назад</a>\r\n</div>\r\n","import {Injectable} from '@angular/core';\nimport {ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot, UrlTree} from \"@angular/router\";\nimport {TokenStorageService} from \"../../service/token-storage.service\";\nimport {Observable} from \"rxjs\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuardService implements CanActivate{\n\n  constructor(private router:Router,\n              private tokenService:TokenStorageService) { }\n\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n    const currentUser=this.tokenService.getUser();\n    if(currentUser){\n      return true;\n    }\n    // перенаправляем на Login-страницу\n    this.router.navigate(['/app-login'],{queryParams:{returnUrl:state.url}});\n    return false;\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport {HTTP_INTERCEPTORS, HttpEvent, HttpHandler, HttpInterceptor, HttpRequest} from \"@angular/common/http\";\nimport {Observable} from \"rxjs\";\nimport {TokenStorageService} from \"../../service/token-storage.service\";\n\nconst TOKEN_HEADER_KEY = 'Authorization'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthInterceptorService implements HttpInterceptor{\n\n\n  constructor(private tokenService: TokenStorageService) {\n  }\n\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    let authRequest = req;\n    const token = this.tokenService.getToken();\n    if (token != null) {\n      authRequest = req.clone({headers: req.headers.set(TOKEN_HEADER_KEY, token)});\n    }\n    return next.handle(authRequest);\n  }\n}\nexport const authInterceptorProviders = [\n  {provide: HTTP_INTERCEPTORS, useClass: AuthInterceptorService, multi: true}\n];\n","import { Injectable } from '@angular/core';\nimport {TokenStorageService} from \"../../service/token-storage.service\";\nimport {NotificationService} from \"../../service/notification.service\";\nimport {HTTP_INTERCEPTORS, HttpEvent, HttpHandler, HttpInterceptor, HttpRequest} from \"@angular/common/http\";\nimport {Observable, throwError} from 'rxjs';\nimport {catchError} from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ErrorInterceptorService implements HttpInterceptor {\n\n  constructor(private tokenService: TokenStorageService,\n              private notificationService: NotificationService) {\n  }\n\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    return next.handle(req).pipe(catchError(err => {\n      /** ловим ошибку пользователь не авторизован */\n      if (err.status === 401) {\n        this.tokenService.logOut();\n        window.location.reload();\n      }\n\n\n      const error = err.error.message || err.statusText;\n      this.notificationService.showSnackBar(error);\n      return throwError(error);\n\n    }));\n  }\n}\n\nexport const authErrorInterceptorProviders = [\n  {provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptorService, multi: true}\n];\n","import { Component, OnInit } from '@angular/core';\r\nimport {UserService} from \"../../service/user.service\";\r\nimport {NotificationService} from \"../../service/notification.service\";\r\nimport {Router} from \"@angular/router\";\r\nimport {IUser, UserRoles} from \"../../models/User\";\r\nimport {error} from \"@angular/compiler/src/util\";\r\n\r\n@Component({\r\n  selector: 'app-list-users',\r\n  templateUrl: './list-users.component.html',\r\n  styleUrls: ['./list-users.component.css']\r\n})\r\nexport class ListUsersComponent implements OnInit {\r\n  users:IUser[];\r\n  usersRoles:UserRoles[];\r\n  isUsersLoaded:boolean;\r\n  isAdmin:boolean;\r\n  isUser:boolean;\r\n  isAdministrator:boolean;\r\n  isTeamlieder_1:boolean;\r\n  isTeamlieder_2:boolean;\r\n  isTeamlieder_3:boolean;\r\n\r\n\r\n  constructor(private userService: UserService,\r\n              private notificationService: NotificationService,\r\n              private router: Router) {\r\n    this.isAdmin=true;\r\n    this.isUser=true;\r\n    this.isTeamlieder_1=false;\r\n    this.isTeamlieder_2=false;\r\n    this.isTeamlieder_3=false;\r\n    this.isAdministrator=false;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.userService.getAll()\r\n      .subscribe(data => {\r\n        this.users = data;\r\n        this.usersRoles=this.userService.createUsersRoles(data);\r\n        this.isUsersLoaded = true;\r\n      },error => {\r\n        this.notificationService.showSnackBar(\"Пользователей не зарегистрировано\");\r\n        this.isUsersLoaded = false;\r\n      });\r\n  }\r\n\r\n  //TODO удалить после отладки\r\n  setRoles():void{\r\n    if (this.isUsersLoaded){\r\n      this.userService.getRolesCurrentUser();\r\n      this.isUser=this.userService.isUserRole;\r\n      this.isTeamlieder_1=this.userService.isTeamlied_1Role;\r\n      this.isTeamlieder_2=this.userService.isTeamlied_2Role;\r\n      this.isTeamlieder_3=this.userService.isTeamlied_3Role;\r\n      this.isAdministrator=this.userService.isAdminRole;\r\n\r\n    }\r\n\r\n  }\r\n  deleteUser(id:number):void{\r\n    this.userService.delete(id)\r\n      .subscribe(data=>{\r\n        this.notificationService.showSnackBar(data);\r\n      },error => {\r\n        this.notificationService.showSnackBar(error);\r\n      });\r\n  }\r\n\r\n  editUser(id:number):void{\r\n    this.userService.getUserById(id)\r\n      .subscribe(data=>{\r\n        this.userService.setUser(data);\r\n        this.router.navigate(['app-edit-user']);\r\n      },error=>{\r\n        this.notificationService.showSnackBar(error);\r\n      });\r\n\r\n  }\r\n\r\n}\r\n","<div *ngIf=\"isUsersLoaded\">\r\n  <h1>Перечень зарегистрированных пользователей</h1>\r\n  <div class=\"table-wrapper content\">\r\n    <table id=\"list-table\" class=\"table table-hover table-bordered\">\r\n      <thead>\r\n      <tr>\r\n        <th scope=\"col\" width=\"3%\">N</th>\r\n        <th scope=\"col\" width=\"20%\">ФИО</th>\r\n        <th scope=\"col\" width=\"5%\">E-mail</th>\r\n        <th scope=\"col\" width=\"5%\">Руководитель уровня 1</th>\r\n        <th scope=\"col\" width=\"5%\">Руководитель уровня 2</th>\r\n        <th scope=\"col\" width=\"5%\">Руководитель уровня 3</th>\r\n        <th scope=\"col\" width=\"5%\">Администратор</th>\r\n        <th *ngIf=\"isAdmin\" scope=\"col\" width=\"5%\">Удаление</th>\r\n        <th *ngIf=\"isAdmin\" scope=\"col\" width=\"5%\">Редактирование</th>\r\n      </tr>\r\n      </thead>\r\n      <tbody>\r\n      <tr *ngFor=\"let user of usersRoles; let i=index\">\r\n        <th scope=\"row\">{{i+1}}</th>\r\n        <td>{{user.fio}}</td>\r\n        <td>{{user.email}}</td>\r\n        <td>{{user.roles.roles[1].active? \"Да\":\"Нет\"}}</td>\r\n        <td>{{user.roles.roles[2].active? \"Да\":\"Нет\"}}</td>\r\n        <td>{{user.roles.roles[3].active? \"Да\":\"Нет\"}}</td>\r\n        <td>{{user.roles.roles[4].active? \"Да\":\"Нет\"}}</td>\r\n        <td><a class=\"btn btn-warning\"\r\n               (click)=\"deleteUser(user.id)\">Удалить</a></td>\r\n        <td><a class=\"btn btn-info\"\r\n               (click)=\"editUser(user.id)\">Редактировать</a></td>\r\n      </tr>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n  <div *ngIf=\"isAdmin\">\r\n    <p>Добавить пользователя</p>\r\n    <a class=\"btn btn-warning\" routerLink=\"/app-register-with-roles\">Добавить</a>\r\n  </div>\r\n\r\n</div>\r\n\r\n","import {Component, OnInit} from '@angular/core';\r\nimport {FormBuilder, FormGroup, Validators} from \"@angular/forms\";\r\nimport {AuthService} from \"../../service/auth.service\";\r\nimport {TokenStorageService} from \"../../service/token-storage.service\";\r\nimport {NotificationService} from \"../../service/notification.service\";\r\nimport {Router} from \"@angular/router\";\r\nimport {Observable} from \"rxjs\";\r\nimport {UserService} from \"../../service/user.service\";\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\n\r\nexport class LoginComponent implements OnInit {\r\n\r\n  public loginForm: FormGroup;\r\n\r\n  constructor(\r\n    private authService: AuthService,\r\n    private tokenStorage: TokenStorageService,\r\n    private notificationService: NotificationService,\r\n    private router: Router,\r\n    private userService:UserService,\r\n    private fb: FormBuilder) {\r\n    if (this.tokenStorage.getUser()) {\r\n      this.router.navigate(['main']);\r\n    }\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.loginForm = this.createLoginForm();\r\n  }\r\n  createLoginForm(): FormGroup {\r\n    return this.fb.group({\r\n      username: ['', Validators.compose([Validators.required, Validators.email])],\r\n      password: ['', Validators.compose([Validators.required])],\r\n    });\r\n  }\r\n\r\n  testHost(){\r\n    this.authService.testHost();\r\n  }\r\n\r\n  submit(): void{\r\n    this.authService.login({\r\n      username: this.loginForm.value.username,\r\n      password: this.loginForm.value.password.toLowerCase()\r\n    }).subscribe(data => {\r\n\r\n      this.tokenStorage.saveToken(data.token);\r\n      this.tokenStorage.saveUser(data);\r\n      this.userService.getRolesCurrentUser();\r\n      this.notificationService.showSnackBar('Успешно зашли на сайт');\r\n      this.router.navigate(['main']);\r\n      // window.location.reload();\r\n    }, error => {\r\n      this.notificationService.showSnackBar(error);\r\n    });\r\n  }\r\n  inputHandler(event:any){\r\n    const value=event.target.value;\r\n    console.log(value)\r\n  }\r\n\r\n}\r\n","<div class=\"login-page\">\r\n  <h2>Login</h2>\r\n  <form [formGroup]=\"loginForm\" class=\"login-form\">\r\n    <div>\r\n      <div class=\"justify-content-center\">\r\n        <div></div>\r\n        <mat-form-field appearance=\"outline\">\r\n          <mat-label>Email Address</mat-label>\r\n          <input matInput\r\n                 formControlName=\"username\">\r\n        </mat-form-field>\r\n      </div>\r\n      <div>\r\n        <mat-form-field appearance=\"outline\">\r\n          <mat-label>Password</mat-label>\r\n          <input matInput (input)=\"inputHandler($event)\" type=\"password\"\r\n                 formControlName=\"password\">\r\n        </mat-form-field>\r\n      </div>\r\n\r\n      <div id=\"controls\" class=\"row\">\r\n        <button style=\"width: 20%\" [disabled]=\"loginForm.invalid\" (click)=\"submit()\" mat-flat-button color=\"primary\">\r\n          Login\r\n        </button>\r\n\r\n        <a routerLink=\"/register\">Register</a>\r\n<!--        <button style=\"width: 20%\" (click)=\"testHost()\" mat-flat-button color=\"primary\">-->\r\n<!--          testHost-->\r\n<!--        </button>-->\r\n      </div>\r\n    </div>\r\n  </form>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {FormBuilder, FormGroup, Validators} from \"@angular/forms\";\r\nimport {Role} from \"../../models/ERole\";\r\nimport {AuthService} from \"../../service/auth.service\";\r\nimport {NotificationService} from \"../../service/notification.service\";\r\n\r\n@Component({\r\n  selector: 'app-register-with-roles',\r\n  templateUrl: './register-with-roles.component.html',\r\n  styleUrls: ['./register-with-roles.component.css']\r\n})\r\nexport class RegisterWithRolesComponent implements OnInit {\r\n  public  registerForm:FormGroup;\r\n  roles:Role\r\n\r\n  constructor(\r\n    private authService: AuthService,\r\n    private notificationService: NotificationService,\r\n    private fb: FormBuilder\r\n  ) {\r\n    this.roles=new Role();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.registerForm=this.createRegisterForm();\r\n  }\r\n  createRegisterForm(): FormGroup {\r\n    return this.fb.group({\r\n      email: ['', Validators.compose([Validators.required, Validators.email])],\r\n      username: ['', Validators.compose([Validators.required])],\r\n      firstname: ['', Validators.compose([Validators.required])],\r\n      lastname: ['', Validators.compose([Validators.required])],\r\n      patronymic: ['', Validators.compose([Validators.required])],\r\n      initial: ['', Validators.compose([Validators.required])],\r\n      password: ['', Validators.compose([Validators.required])],\r\n      confirmPassword: ['', Validators.compose([Validators.required])],\r\n      roles:[this.roles.roles,Validators.compose([Validators.required])]\r\n    });\r\n  }\r\n\r\n  setRoles(){\r\n    this.registerForm.value.roles.forEach(item=>{\r\n      this.setRole(item);\r\n    })\r\n  }\r\n  setRole(index:number){\r\n    // this.roles.roles[index].active=!this.roles.roles[index].active;\r\n    this.roles.roles[index].active=true;\r\n  }\r\n\r\n  submit(): void {\r\n    this.setRoles();\r\n\r\n    this.authService.registerWithRoles({\r\n      email: this.registerForm.value.email,\r\n      username: this.registerForm.value.username,\r\n      firstname: this.registerForm.value.firstname,\r\n      lastname: this.registerForm.value.lastname,\r\n      patronymic:this.registerForm.value.patronymic,\r\n      initial:this.registerForm.value.initial,\r\n      password: this.registerForm.value.password,\r\n      confirmPassword: this.registerForm.value.confirmPassword,\r\n      roles:this.roles.roles\r\n    }).subscribe(data => {\r\n      this.notificationService.showSnackBar('Регистрация прошла успешно!');\r\n    }, error => {\r\n      this.notificationService.showSnackBar('Что-то пошло не так при регистрации');\r\n    });\r\n  }\r\n}\r\n","<div class=\"register-page\">\n  <h2>Регистрация нового пользователя</h2>\n  <form [formGroup]=\"registerForm\">\n    <div class=\"justify-content-center\">\n      <mat-form-field appearance=\"outline\">\n        <mat-label>Email</mat-label>\n        <input matInput\n               formControlName=\"email\">\n      </mat-form-field>\n    </div>\n    <div class=\"justify-content-center\">\n      <mat-form-field appearance=\"outline\">\n        <mat-label>Имя пользователя в системе</mat-label>\n        <input matInput\n               formControlName=\"username\">\n      </mat-form-field>\n    </div>\n    <div class=\"justify-content-center\">\n      <mat-form-field appearance=\"outline\">\n        <mat-label>Имя</mat-label>\n        <input matInput\n               formControlName=\"firstname\">\n      </mat-form-field>\n    </div>\n    <div class=\"justify-content-center\">\n      <mat-form-field appearance=\"outline\">\n        <mat-label>Фамилия</mat-label>\n        <input matInput\n               formControlName=\"lastname\">\n      </mat-form-field>\n    </div>\n    <div class=\"justify-content-center\">\n      <mat-form-field appearance=\"outline\">\n        <mat-label>Отчество</mat-label>\n        <input matInput\n               formControlName=\"patronymic\">\n      </mat-form-field>\n    </div>\n    <div class=\"justify-content-center\">\n      <mat-form-field appearance=\"outline\">\n        <mat-label>Инициалы (Имя. Отчество.)</mat-label>\n        <input matInput [maxLength]=4\n               formControlName=\"initial\">\n        <mat-hint>(Имя. Отчество.)</mat-hint>\n      </mat-form-field>\n    </div>\n    <div class=\"justify-content-center\">\n      <mat-form-field appearance=\"outline\">\n        <mat-label>Пароль</mat-label>\n        <input type=\"password\" matInput\n               formControlName=\"password\">\n      </mat-form-field>\n    </div>\n    <div class=\"justify-content-center\">\n      <mat-form-field appearance=\"outline\">\n        <mat-label>Подтверждение пароля</mat-label>\n        <input type=\"password\" matInput\n               formControlName=\"confirmPassword\">\n      </mat-form-field>\n    </div>\n    <div class=\"roles_area\">\n      <mat-form-field appearance=\"fill\">\n        <mat-label>Роли в системе</mat-label>\n        <mat-select formControlName=\"roles\" multiple>\n          <mat-option *ngFor=\"let role of roles.roles; let i=index\"\n                      [value]=\"role.id\">\n            {{role.title}}</mat-option>\n        </mat-select>\n      </mat-form-field>\n    </div>\n\n    <button [disabled]=\"registerForm.invalid\" (click)=\"submit()\" mat-flat-button color=\"primary\">\n      Регистрация\n    </button>\n  </form>\n  <a class=\"btn btn-warning\" routerLink=\"/app-list-users\">Назад</a>\n</div>\n","import { Component, OnInit } from '@angular/core';\r\nimport {FormBuilder, FormGroup, Validators} from \"@angular/forms\";\r\nimport {AuthService} from \"../../service/auth.service\";\r\nimport {NotificationService} from \"../../service/notification.service\";\r\nimport {Role} from \"../../models/ERole\";\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.css']\r\n})\r\nexport class RegisterComponent implements OnInit {\r\n\r\n  public  registerForm:FormGroup;\r\n  roles:Role\r\n\r\n  constructor(\r\n    private authService: AuthService,\r\n    private notificationService: NotificationService,\r\n    private fb: FormBuilder\r\n  ) {\r\n    this.roles=new Role();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.registerForm=this.createRegisterForm();\r\n  }\r\n  createRegisterForm(): FormGroup {\r\n    return this.fb.group({\r\n      email: ['', Validators.compose([Validators.required, Validators.email])],\r\n      username: ['', Validators.compose([Validators.required])],\r\n      firstname: ['', Validators.compose([Validators.required])],\r\n      lastname: ['', Validators.compose([Validators.required])],\r\n      patronymic: ['', Validators.compose([Validators.required])],\r\n      initial: ['', Validators.compose([Validators.required])],\r\n      password: ['', Validators.compose([Validators.required])],\r\n      confirmPassword: ['', Validators.compose([Validators.required])],\r\n    });\r\n  }\r\n\r\n    submit(): void {\r\n\r\n      this.authService.register({\r\n        email: this.registerForm.value.email,\r\n        username: this.registerForm.value.username,\r\n        firstname: this.registerForm.value.firstname,\r\n        lastname: this.registerForm.value.lastname,\r\n        patronymic:this.registerForm.value.patronymic,\r\n        initial:this.registerForm.value.initial,\r\n        password: this.registerForm.value.password.toLowerCase(),\r\n        confirmPassword: this.registerForm.value.confirmPassword.toLowerCase()\r\n      }).subscribe(data => {\r\n        this.notificationService.showSnackBar('Регистрация прошла успешно!');\r\n      }, error => {\r\n        this.notificationService.showSnackBar('Что-то пошло не так при регистрации');\r\n      });\r\n    }\r\n}\r\n","<div class=\"register-page\">\r\n  <h2>Регистрация нового пользователя</h2>\r\n  <p>У Вас уже есть учетная запись?  <a routerLink=\"/app-login\">Войти</a></p>\r\n  <form [formGroup]=\"registerForm\">\r\n    <div class=\"justify-content-center\">\r\n      <mat-form-field appearance=\"outline\">\r\n        <mat-label>Email</mat-label>\r\n        <input matInput\r\n               formControlName=\"email\">\r\n      </mat-form-field>\r\n    </div>\r\n    <div class=\"justify-content-center\">\r\n      <mat-form-field appearance=\"outline\">\r\n        <mat-label>Имя пользователя в системе</mat-label>\r\n        <input matInput\r\n               formControlName=\"username\">\r\n      </mat-form-field>\r\n    </div>\r\n    <div class=\"justify-content-center\">\r\n      <mat-form-field appearance=\"outline\">\r\n        <mat-label>Имя</mat-label>\r\n        <input matInput\r\n               formControlName=\"firstname\">\r\n      </mat-form-field>\r\n    </div>\r\n    <div class=\"justify-content-center\">\r\n      <mat-form-field appearance=\"outline\">\r\n        <mat-label>Фамилия</mat-label>\r\n        <input matInput\r\n               formControlName=\"lastname\">\r\n      </mat-form-field>\r\n    </div>\r\n    <div class=\"justify-content-center\">\r\n      <mat-form-field appearance=\"outline\">\r\n        <mat-label>Отчество</mat-label>\r\n        <input matInput\r\n               formControlName=\"patronymic\">\r\n      </mat-form-field>\r\n    </div>\r\n    <div class=\"justify-content-center\">\r\n      <mat-form-field appearance=\"outline\">\r\n        <mat-label>Инициалы (Имя. Отчество.)</mat-label>\r\n        <input matInput [maxLength]=4\r\n               formControlName=\"initial\">\r\n        <mat-hint>(Имя. Отчество.)</mat-hint>\r\n      </mat-form-field>\r\n    </div>\r\n    <div class=\"justify-content-center\">\r\n      <mat-form-field appearance=\"outline\">\r\n        <mat-label>Пароль</mat-label>\r\n        <input type=\"password\" matInput\r\n               formControlName=\"password\">\r\n      </mat-form-field>\r\n    </div>\r\n    <div class=\"justify-content-center\">\r\n      <mat-form-field appearance=\"outline\">\r\n        <mat-label>Подтверждение пароля</mat-label>\r\n        <input type=\"password\" matInput\r\n               formControlName=\"confirmPassword\">\r\n      </mat-form-field>\r\n    </div>\r\n\r\n    <button [disabled]=\"registerForm.invalid\" (click)=\"submit()\" mat-flat-button color=\"primary\">\r\n      Регистрация\r\n    </button>\r\n  </form>\r\n</div>\r\n\r\n","import {Component, Inject, OnInit} from '@angular/core';\r\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\r\nimport {DocumentModel} from \"../../models/DocumentModel\";\r\nimport {NotificationService} from \"../../service/notification.service\";\r\nimport {Router} from \"@angular/router\";\r\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'app-add-document',\r\n  templateUrl: './add-document.component.html',\r\n  styleUrls: ['./add-document.component.css']\r\n})\r\nexport class AddDocumentComponent implements OnInit {\r\n  isDataLoaded = false;\r\n  isAddDocument = false;\r\n  nameFile: string;\r\n  selectedFile: File;\r\n  previewImgURL: any;\r\n  public _docForm: FormGroup;\r\n\r\n  constructor(private dialogRef: MatDialogRef<AddDocumentComponent>,\r\n              @Inject(MAT_DIALOG_DATA) public data,\r\n              private notificationService: NotificationService,\r\n              private fb: FormBuilder,\r\n              private router: Router\r\n              ) {\r\n  }\r\n\r\n  getRandomInt(min, max):number {\r\n    min = Math.ceil(min);\r\n    max = Math.floor(max);\r\n    return Math.floor(Math.random() * (max - min + 1)) + min;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.data.docService.docModel.taskId = this.data.task.id;\r\n    this.data.docService.docModel.employeeId = this.data.task.employeeId;\r\n    this.data.docService.docModel.userId = this.data.user.id;\r\n    this.data.docService.docModel.name=\"Новый документ: \"+this.getRandomInt(0,10).toString();\r\n    this.data.docService.docModel.note=\"Примечание к документу ID:\";\r\n    this.isDataLoaded = true;\r\n    this._docForm = this._createDocForm();\r\n  }\r\n\r\n  _createDocForm(): FormGroup {\r\n    return this._docForm = this.fb.group({\r\n      name: [this.data.docService.docModel.name, Validators.required],\r\n      nameFile: [this.data.docService.docModel.nameFile, Validators.required],\r\n      note: [this.data.docService.docModel.note],\r\n      file: [Validators.required]\r\n    });\r\n  }\r\n\r\n  onFileSelected(event): void {\r\n    this.selectedFile = event.target.files[0];\r\n\r\n    const reader = new FileReader();\r\n    reader.readAsDataURL(this.selectedFile);\r\n    // перед загрузкой файла сохраним в переменной preview docService\r\n    reader.onload = () => {\r\n      this.previewImgURL = reader.result;\r\n      this.data.docService.previewImgURL = this.previewImgURL;\r\n    };\r\n  }\r\n\r\n  renderTableAdd(){\r\n    var itemDataSource=new DocumentModel({\r\n      id:this.data.docService.docModel.id,\r\n      name: this.data.docService.docModel.name,\r\n      nameFile: this.data.docService.docModel.nameFile,\r\n      file: null,\r\n      date: null,\r\n      taskId: this.data.docService.docModel.taskId,\r\n      employeeId: this.data.docService.docModel.employeeId,\r\n      note: this.data.docService.docModel.note,\r\n      disabled: false\r\n    });\r\n    this.data.dataSource.push(itemDataSource);\r\n    this.data.table.renderRows();\r\n  }\r\n\r\n\r\n  // Заполняем объект для передачи контроллеру\r\n  onUpload(): void {\r\n    if (this.selectedFile != null) {\r\n      this.data.docService.docModel.nameFile = this.selectedFile.name;\r\n      this.data.docService.docModel.file = this.selectedFile;\r\n      this._docForm.value.nameFile = this.selectedFile.name;\r\n      this.nameFile = this.selectedFile.name;\r\n      this.data.docService.uploadDocument(this.data.docService.docModel)\r\n        .subscribe((data) => {\r\n          this.notificationService.showSnackBar('Файл'+this.data.docService.docModel.nameFile+' загружен успешно');\r\n          this.dialogRef.close();\r\n          this.renderTableAdd();\r\n          // this.router.navigate(['app-send-task']);\r\n        }, error => {\r\n          this.notificationService.showSnackBar(error.message);\r\n        });\r\n    }\r\n  }\r\n\r\n  submit(): void {\r\n    this.data.docService.docModel.name=this._docForm.value.name;\r\n    this.data.docService.docModel.note=this._docForm.value.note;\r\n    this.data.docService.addDocument(this.data.docService.docModel)\r\n      .subscribe(data => {\r\n        this.data.docService.docModel.id=data.id;\r\n        this.notificationService.showSnackBar('Данные вложенного документа были внесены успешно (id:'\r\n          +this.data.docService.docModel.id+'). Выберите нужный файл.');\r\n        this.isAddDocument = true;\r\n      }, error => {\r\n        this.notificationService.showSnackBar(\"Данные не были внесены\");\r\n      });\r\n  }\r\n\r\n  closeDialog() {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  formatImage(img: any): any {\r\n    if (img == null) {\r\n      return null;\r\n    }\r\n    return 'data:image/jpeg;base64,' + img;\r\n  }\r\n\r\n}\r\n","<div *ngIf=\"isDataLoaded\">\r\n  <h2>Добавление документа</h2>\r\n  <form [formGroup]=\"_docForm\">\r\n    <mat-form-field class=\"task-full-width\" appearance=\"fill\">\r\n      <mat-label>Наименование:</mat-label>\r\n      <input matInput #message  formControlName=\"name\" type=\"text\" maxlength=\"256\">\r\n      <mat-hint align=\"start\"><strong>Наименование ограничено по вводу символов</strong> </mat-hint>\r\n      <mat-hint align=\"end\">{{message.value.length}} / 256</mat-hint>\r\n      <button *ngIf=\"_docForm.value.name\" matSuffix mat-icon-button aria-label=\"Clear\" (click)=_docForm.value.name.value=''>\r\n        <mat-icon>close</mat-icon>\r\n      </button>\r\n    </mat-form-field>\r\n    <mat-form-field class=\"doc-note\" appearance=\"fill\">\r\n      <mat-label>Примечание:</mat-label>\r\n      <textarea matInput formControlName=\"note\"></textarea>\r\n    </mat-form-field>\r\n\r\n    <div class=\"row\">\r\n        <button (click)=\"closeDialog()\" class=\"w-50\"\r\n                mat-button mat-dialog-close disableRipple>\r\n          Отмена\r\n        </button>\r\n        <button color=\"primary\" class=\"w-50\" [disabled]=\"_docForm.value.name.length < 1\" (click)=\"submit()\" mat-button disableRipple>\r\n          Сохранить\r\n        </button>\r\n      </div>\r\n  </form>\r\n\r\n  <mat-label>Файл:</mat-label>\r\n  <input matInput  formControlName=\"nameFile\" type=\"text\" readonly>\r\n    <input type=\"file\"\r\n           style=\"display: none\"\r\n           #fileInput\r\n           (change)=\"onFileSelected($event)\">\r\n\r\n    <img class=\"profile-image\" [src]=\"previewImgURL || formatImage(data.docService.previewImgURL)\" alt=\"Preview loaded document\">\r\n\r\n    <button mat-button *ngIf=\"isAddDocument\" (click)=\"fileInput.click()\">Выбрать</button>\r\n    <button mat-button *ngIf=\"selectedFile\" (click)=\"onUpload()\">Загрузить и выйти</button>\r\n</div>\r\n","import {Component, OnInit} from '@angular/core';\r\nimport {IDocumentModel} from \"../../models/DocumentModel\";\r\nimport {DocumentUploadService} from \"../../service/document-upload.service\";\r\nimport {UserService} from \"../../service/user.service\";\r\nimport {NotificationService} from \"../../service/notification.service\";\r\nimport {Router} from \"@angular/router\";\r\nimport {IUser} from \"../../models/User\";\r\nimport {TaskService} from \"../../service/task.service\";\r\nimport {MatDialog, MatDialogConfig} from \"@angular/material/dialog\";\r\nimport {AddDocumentComponent} from \"../add-document/add-document.component\";\r\nimport * as fileSaver from 'file-saver';\r\n@Component({\r\n  selector: 'app-list-documents',\r\n  templateUrl: './list-documents.component.html',\r\n  styleUrls: ['./list-documents.component.css']\r\n})\r\nexport class ListDocumentsComponent implements OnInit {\r\n  isDocsLoaded:boolean;\r\n  isUserDataLoaded:boolean;\r\n  isPreview:boolean;\r\n  docs: IDocumentModel[];\r\n  user: IUser;\r\n  taskId:number;\r\n  previewImgURL:any;\r\n  typePreview:string[];\r\n  isImage:boolean;\r\n  isPDF:boolean;\r\n  isOther:boolean;\r\n  header:string;\r\n  a:any;\r\n  objectUrl:any;\r\n\r\n\r\n  constructor(  private docService: DocumentUploadService,\r\n                private userService: UserService,\r\n                public taskService: TaskService,\r\n                private notificationService: NotificationService,\r\n                private dialog: MatDialog,\r\n                private router: Router) {\r\n    this.taskId=taskService.task.id;\r\n    this.isDocsLoaded = false;\r\n    this.isUserDataLoaded = false;\r\n    this.isPreview = false;\r\n    this.isImage=false;\r\n    this.isPDF=false;\r\n    this.isOther=false;\r\n    this.header=\"Просмотр вложенных документов:\";\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.userService.getCurrentUser()\r\n      .subscribe(data => {\r\n        this.user = data;\r\n        this.isUserDataLoaded = true;\r\n      });\r\n    this.loadDocs(this.taskId);\r\n  }\r\n\r\n  back(){\r\n    this.router.navigate(['app-send-task']);\r\n  }\r\n\r\n  loadDocs(taskId:number){\r\n    this.docService.getDocumentsToTask(taskId)\r\n      .subscribe(data =>{\r\n        this.docs=data;\r\n        this.isDocsLoaded=true;\r\n        },error => {\r\n          this.header=\"Прикрепленные документы отсутствуют\";\r\n          this.notificationService.showSnackBar(this.header);\r\n          this.isDocsLoaded=true;\r\n        });\r\n  }\r\n\r\n  viewDocExtend(id:number, nameFile:string){\r\n    this.isImage=false;\r\n    this.isPDF=false;\r\n    this.docService.getDocument(id)\r\n      .subscribe(data=>{\r\n        this.previewImgURL=data.docBytes;\r\n        this.typePreview=nameFile.split(\".\");\r\n        this.isPreview=true;\r\n        this.isPDF=this.typePreview[1].includes(\"pdf\");\r\n        this.isImage=this.typePreview[1].includes(\"jpg\");\r\n        this.isOther=this.isPDF || this.isImage? false:true;\r\n        this.notificationService.showSnackBar(\"Файл для просмотра загружен успешно\");\r\n      },error => {\r\n        this.notificationService.showSnackBar(\"Файл для просмотра загрузить не удалось!\");\r\n        });\r\n  }\r\n\r\n  downloadToFile(id:number,nameFile:string){\r\n    this.docService.download(id)\r\n      .subscribe(blob => {\r\n        fileSaver.saveAs(blob,nameFile);\r\n      },error => {\r\n        this.notificationService.showSnackBar(\"Ошибка при загрузке файла!\");\r\n      })\r\n  }\r\n\r\n  downloadToAnchor(id:number,nameFile:string){\r\n    this.docService.download(id)\r\n      .subscribe(blob => {\r\n      this.a = document.createElement('a');\r\n      this.objectUrl = URL.createObjectURL(blob);\r\n      this.a.href = this.objectUrl;\r\n      this.a.download = 'nameFile';\r\n      this.a.click();\r\n      URL.revokeObjectURL(this.objectUrl);\r\n    })\r\n  }\r\n\r\n  downloadDoc(id:number, nameFile:string){\r\n    this.docService.getDocument(id)\r\n      .subscribe(data=> {\r\n        this.previewImgURL = data.docBytes;\r\n        let blob:any = new Blob([data.docBytes], { type: 'application/pdf; charset=utf-8' });\r\n        const url = window.URL.createObjectURL(blob);\r\n        fileSaver.saveAs(blob,nameFile);\r\n        this.notificationService.showSnackBar(\"Файл был загружен успешно\");\r\n      },error => {\r\n        this.notificationService.showSnackBar(\"Файл загрузить не удалось!\");\r\n      });\r\n  }\r\n\r\n  formatUni(obj: any):any{\r\n    if (this.isPreview){\r\n      if (this.typePreview[1].includes(\"pdf\")){\r\n        this.isPDF=true;\r\n        return this.formatPdf(obj);\r\n      }\r\n      else{\r\n        this.isImage=true;\r\n        return this.formatImage(obj);\r\n      }\r\n    }\r\n    else\r\n      return null;\r\n  }\r\n  formatImage(img: any): any {\r\n    if (img == null) {\r\n      return null;\r\n    }\r\n    return 'data:image/jpeg;base64,' + img;\r\n  }\r\n\r\n  formatPdf(pdf: any): any {\r\n    if (pdf == null) {\r\n      return null;\r\n    }\r\n    return 'application/pdf,' + pdf;\r\n  }\r\n\r\n  openEditDialog(): void {\r\n    const dialogAddDocConfig = new MatDialogConfig();\r\n    dialogAddDocConfig.width = '600px';\r\n    dialogAddDocConfig.data = {\r\n      task: this.taskService.task,\r\n      docService: this.docService,\r\n      user: this.user\r\n    };\r\n    this.dialog.open(AddDocumentComponent, dialogAddDocConfig);\r\n  }\r\n\r\n  deleteDocument(id: number): void {\r\n    this.docService.deleteDocument(id).subscribe(data => {\r\n      this.notificationService.showSnackBar(data.message);\r\n    });\r\n    this.router.navigate([\"app-send-task\"]);\r\n  }\r\n}\r\n","<div  class=\"document-form\">\r\n  <h2>Просмотр вложенных документов:</h2>\r\n  <div class=\"table-wrapper content button_row\">\r\n    <table id=\"docs-table\" class=\"table table-hover table-bordered\">\r\n      <thead>\r\n      <tr>\r\n        <th scope=\"col\" width=\"3%\">N</th>\r\n        <th scope=\"col\" width=\"30%\">Наименование</th>\r\n        <th scope=\"col\" width=\"20%\">Файл</th>\r\n        <th scope=\"col\" width=\"5%\">Просмотр</th>\r\n        <th scope=\"col\" width=\"5%\">Удаление</th>\r\n        <th scope=\"col\" width=\"5%\">Загрузка</th>\r\n      </tr>\r\n      </thead>\r\n      <tbody>\r\n      <tr *ngFor=\"let doc of docs; let i = index\">\r\n        <th scope=\"row\" width=\"3%\">{{i+1}}</th>\r\n        <td width=\"30%\">{{doc.name}}</td>\r\n        <td width=\"20%\">{{doc.nameFile}}</td>\r\n        <td width=\"10\">\r\n          <button mat-flat-button color=\"primary\" (click)=\"viewDocExtend(doc.id,doc.nameFile)\">Просмотр</button>\r\n        </td>\r\n        <td width=\"10\">\r\n          <button mat-flat-button color=\"warn\" (click)=\"deleteDocument(doc.id)\">Удалить</button>\r\n        </td>\r\n        <td width=\"10\">\r\n          <button mat-flat-button color=\"primary\" (click)=\"downloadToFile(doc.id,doc.nameFile)\">Загрузить</button>\r\n        </td>\r\n      </tr>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n  <button mat-flat-button color=\"primary\" (click)=\"back()\">Назад</button>\r\n  <button mat-flat-button color=\"accent\" (click)=\"openEditDialog()\" >Добавить</button>\r\n  <h2>Содержимое документа:</h2>\r\n  <div *ngIf=\"isOther\">\r\n    <p>Неизвестный формат файла просмотр не возможен</p>\r\n  </div>\r\n  <dif *ngIf=\"isImage\">\r\n    <img class=\"document-view\" [src]=\"formatImage(previewImgURL)\" alt=\"Preview loaded document\">\r\n  </dif>\r\n  <div *ngIf=\"isPDF\">\r\n    <object [data]=\"previewImgURL\" type=\"application/pdf\"></object>\r\n<!--    <embed class=\"document-view\" [src]=\"formatPdf(previewImgURL)\">-->\r\n<!--    <iframe class=\"document-view\" src=\"https://docs.google.com/gview?formatPdf(previewImgURL)&embedded=true\"></iframe>-->\r\n  </div>\r\n</div>\r\n","import {Component, OnInit, ViewChild} from '@angular/core';\r\nimport {DocumentModel, IDocumentModel} from \"../../models/DocumentModel\";\r\nimport {MatTable} from \"@angular/material/table\";\r\nimport {TaskService} from \"../../service/task.service\";\r\nimport {UserService} from \"../../service/user.service\";\r\nimport {DocumentUploadService} from \"../../service/document-upload.service\";\r\nimport {MatDialog, MatDialogConfig} from \"@angular/material/dialog\";\r\nimport {NotificationService} from \"../../service/notification.service\";\r\nimport {Router} from \"@angular/router\";\r\nimport {IUser} from \"../../models/User\";\r\nimport {AddDocumentComponent} from \"../add-document/add-document.component\";\r\nimport {DialogComponent} from \"../../task/dialog/dialog.component\";\r\n\r\n@Component({\r\n  selector: 'app-list-react-docs',\r\n  templateUrl: './list-react-docs.component.html',\r\n  styleUrls: ['./list-react-docs.component.css']\r\n})\r\nexport class ListReactDocsComponent implements OnInit {\r\n  title:string;\r\n  action:string;\r\n  taskId=90\r\n  displayedColumns: string[] = ['id', 'name', 'nameFile','note','date','disabled'];\r\n  dataSource: Array<DocumentModel>;\r\n  isDataSourceLoaded=false;\r\n  isTaskLoaded=false;\r\n  itemDataSource:DocumentModel;\r\n\r\n  @ViewChild(MatTable) table: MatTable<IDocumentModel>;\r\n\r\n  user: IUser;\r\n  isUserDataLoaded = false;\r\n  documents: DocumentModel[];\r\n  clickedRows = new Set<DocumentModel>();\r\n\r\n  constructor(public taskService: TaskService,\r\n              private userService: UserService,\r\n              private docService: DocumentUploadService,\r\n              private dialog: MatDialog,\r\n              private notificationService: NotificationService,\r\n              private router: Router) {\r\n    this.userService.getCurrentUser()\r\n      .subscribe(data => {\r\n        this.user = data;\r\n        this.isUserDataLoaded = true;\r\n      });\r\n    // TODO пока для отладки\r\n    this.taskService.getTaskById(this.taskId)\r\n      .subscribe(data=>{\r\n        this.taskService.task=data;\r\n        this.taskService.setCurrentTaskId(this.taskId);\r\n        this.isTaskLoaded=true;\r\n      },error => {\r\n        this.taskService.task=null;\r\n        this.isTaskLoaded=true;\r\n      });\r\n    this.dataSource=new Array<DocumentModel>();\r\n    this.viewDocs();\r\n  }\r\n\r\n  setDocuments(documents:IDocumentModel[]){\r\n\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n  viewDocs(){\r\n    if (this.taskService.task!=null){\r\n      this.docService.getDocumentsToTask(this.taskService.task.id)\r\n        .subscribe(data => {\r\n          data.forEach(docs=>{\r\n            this.itemDataSource=new DocumentModel(docs);\r\n            this.dataSource.push(this.itemDataSource);\r\n            this.table.dataSource=data;\r\n          });\r\n          // this.table.dataSource=this.dataSource;\r\n          this.isDataSourceLoaded=true;\r\n        });\r\n    }\r\n  }\r\n  /** Диалог при добавлении прикрепляемых файлов */\r\n  openEditDialog(): void {\r\n    const dialogAddDocConfig = new MatDialogConfig();\r\n    dialogAddDocConfig.width = '600px';\r\n    dialogAddDocConfig.data = {\r\n      task: this.taskService.task,\r\n      docService: this.docService,\r\n      user: this.user,\r\n      table: this.table,\r\n      itemDataSource:this.itemDataSource,\r\n      dataSource:this.dataSource\r\n    };\r\n    this.dialog.open(AddDocumentComponent, dialogAddDocConfig);\r\n  }\r\n\r\n  findElementArray(docs:any, id:number): number {\r\n    let index=0;\r\n    docs.forEach(docs=>{\r\n      if (docs.id==id)\r\n        return  index;\r\n      index++;\r\n    });\r\n    return index;\r\n  }\r\n\r\n  deleteDocument(id: number): void {\r\n    this.docService.deleteDocument(id)\r\n      .subscribe(data => {\r\n      this.notificationService.showSnackBar(data);\r\n      let index=0;\r\n      index=this.findElementArray(this.table.dataSource, id);\r\n    },error => {\r\n        this.notificationService.showSnackBar(error);\r\n      });\r\n  }\r\n\r\n  viewDocument(id: number): void {\r\n    this.docService.getDocument(id).subscribe(data => {\r\n      console.log(data);\r\n    })\r\n  }\r\n\r\n  addFromDialog(){\r\n    this.openEditDialog();\r\n  }\r\n\r\n  removeData() {\r\n    this.dataSource.pop();\r\n    this.table.renderRows();\r\n  }\r\n\r\n  removeDataItem(id:number, nameFile:string) {\r\n    this.openDialog(id);\r\n  }\r\n\r\n  /** Диалог при удалении прикрепляемых файлов */\r\n  openDialog(id:number): void {\r\n    const dialogRef = this.dialog.open(DialogComponent, {\r\n      width: '250px',\r\n      data: {title: this.title, action: this.action},\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      this.action = result;\r\n      if (this.action){\r\n        // удаляем из БД\r\n        console.log('удаляем из БД document_id: '+id);\r\n        this.deleteDocument(id);\r\n        //TODO обновление this.table._data(_dataSource)\r\n        this.viewDocs();\r\n        this.table.renderRows();\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n","<dif *ngIf=\"isTaskLoaded\">\r\n  <h1>{{taskService.task.title}}</h1>\r\n  <h2>{{taskService.task.reference}}</h2>\r\n  <p>{{taskService.task.note}}</p>\r\n  <h2>Прикладываемые документы (по необходимости)</h2>\r\n  <div class=\"docs-button-container\">\r\n    <button\r\n      mat-raised-button\r\n      (click)=\"viewDocs()\"\r\n      class=\"docs-button\">\r\n      Просмотр\r\n    </button>\r\n    <button\r\n      mat-raised-button\r\n      [disabled]=\"!isDataSourceLoaded\"\r\n      (click)=\"addFromDialog()\"\r\n      class=\"docs-button\">\r\n      Добавить\r\n    </button>\r\n    <button\r\n      mat-raised-button\r\n      [disabled]=\"!dataSource.length && !isDataSourceLoaded\"\r\n      (click)=\"removeData()\"\r\n      class=\"docs-button\">\r\n      Удалить\r\n    </button>\r\n  </div>\r\n\r\n  <table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8 docs-table\">\r\n    <ng-container matColumnDef=\"id\">\r\n      <th mat-header-cell *matHeaderCellDef>id</th>\r\n      <td mat-cell *matCellDef=\"let element\">{{element.id}}</td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"name\">\r\n      <th mat-header-cell *matHeaderCellDef>Наименование</th>\r\n      <td mat-cell *matCellDef=\"let element\">{{element.name}}</td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"nameFile\">\r\n      <th mat-header-cell *matHeaderCellDef>Файл</th>\r\n      <td mat-cell *matCellDef=\"let element\">{{element.nameFile}}</td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"note\">\r\n      <th mat-header-cell *matHeaderCellDef>Примечание</th>\r\n      <td mat-cell *matCellDef=\"let element\">{{element.note}}</td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"date\">\r\n      <th mat-header-cell *matHeaderCellDef>Дата</th>\r\n      <td mat-cell *matCellDef=\"let element\">{{element.date}}</td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"disabled\">\r\n      <th mat-header-cell *matHeaderCellDef>Type</th>\r\n      <td mat-cell *matCellDef=\"let element\">{{element.disabled? 1:0}}</td>\r\n    </ng-container>\r\n\r\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n\r\n    <tr\r\n      mat-row\r\n      (click)=\"clickedRows.add(row)\"\r\n      [class.row-is-clicked]=\"clickedRows.has(row)\"\r\n      *matRowDef=\"let row; columns: displayedColumns;\"\r\n    ></tr>\r\n  </table>\r\n  <div>\r\n    <h3>\r\n      Журнал выборки файлов\r\n    </h3>\r\n  </div>\r\n\r\n  <div *ngIf=\"!clickedRows.size\">\r\n    Выбранные файлы отсутствуют\r\n  </div>\r\n\r\n  <ul>\r\n    <li *ngFor=\"let clickedRow of clickedRows\">\r\n      Clicked on {{clickedRow.name}}\r\n      <button\r\n        mat-raised-button\r\n        id=\"btn\"\r\n        [disabled]=\"!dataSource.length || clickedRow.disabled\"\r\n        (click)=\"removeDataItem(clickedRow.id,clickedRow.nameFile)\"\r\n        class=\"docs-button\">\r\n        Удалить\r\n      </button>\r\n    </li>\r\n  </ul>\r\n</dif>\r\n","import {Component, OnInit} from '@angular/core';\r\nimport {UserService} from \"../../service/user.service\";\r\nimport {RouteService} from \"../../service/route.service\";\r\nimport {IUser} from \"../../models/User\";\r\nimport {TokenStorageService} from \"../../service/token-storage.service\";\r\n\r\n@Component({\r\n  selector: 'app-index',\r\n  templateUrl: './index.component.html',\r\n  styleUrls: ['./index.component.css']\r\n})\r\nexport class IndexComponent implements OnInit {\r\n  isUserDataLoaded = false;\r\n  isRouteTaskLoaded = false;\r\n  user:IUser;\r\n  isAdmin=false;\r\n  isUser=false;\r\n  isDev=false;\r\n  isTeamlied_1=false;\r\n  isTeamlied_2=false;\r\n  isTeamlied_3=false;\r\n  isRolesLoaded=false;\r\n\r\n  constructor(private userService: UserService,\r\n              private routeService: RouteService,\r\n              private tokenStorage: TokenStorageService) {\r\n    this.userService.getCurrentUser()\r\n      .subscribe(data => {\r\n        this.user = data;\r\n        this.isUserDataLoaded = true;\r\n      });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    }\r\n  ngOmLoad():void{\r\n    this.userService.setUser(this.user);\r\n    this.isAdmin=this.userService.isAdmin(this.user.roles);\r\n    this.isUser=this.userService.isUser(this.user.roles);\r\n    this.isDev=this.userService.isDev(this.user.roles);\r\n    this.isTeamlied_1=this.userService.isTeamlied_1(this.user.roles);\r\n    this.isTeamlied_2=this.userService.isTeamlied_2(this.user.roles);\r\n    this.isTeamlied_3=this.userService.isTeamlied_3(this.user.roles);\r\n    this.isRolesLoaded=true;\r\n  }\r\n  getRouteTask():void{\r\n    this.routeService.getRouteTaskByStartId(this.user.id)\r\n    .subscribe(data=>{\r\n      this.isRouteTaskLoaded=true;\r\n    })\r\n\r\n  }\r\n}\r\n","<div *ngIf=\"isUserDataLoaded\">\r\n  <h1>Здравствуйте: {{user.lastname}} {{user.firstname}} {{user.patronymic}}</h1>\r\n\r\n  <button mat-button [disabled]=\"!isUserDataLoaded\" (click)=\"ngOmLoad()\">\r\n    Показать/Обновить роли в системе\r\n  </button>\r\n  <div *ngIf=\"isRolesLoaded\">\r\n    <h2>Ваши роли в системе: </h2>\r\n    <ol>\r\n      <li>Пользователь: {{isUser ? \"Да\":\"Нет\"}}</li>\r\n      <li>Администратор: {{isAdmin ? \"Да\":\"Нет\"}}</li>\r\n      <li>Руководитель 1-го уровня: {{isTeamlied_1 ? \"Да\":\"Нет\"}}</li>\r\n      <li>Руководитель 2-го уровня: {{isTeamlied_2 ? \"Да\":\"Нет\"}}</li>\r\n      <li>Руководитель 3-го уровня: {{isTeamlied_3 ? \"Да\":\"Нет\"}}</li>\r\n      <li>Разработчик: {{isDev ? \"Да\":\"Нет\"}}</li>\r\n    </ol>\r\n  </div>\r\n</div>\r\n<app-list-route></app-list-route>\r\n","import {Component, OnInit} from '@angular/core';\r\nimport {IUser} from \"../../models/User\";\r\nimport {TokenStorageService} from \"../../service/token-storage.service\";\r\nimport {UserService} from \"../../service/user.service\";\r\nimport {Router} from \"@angular/router\";\r\n\r\n@Component({\r\n  selector: 'app-navigation',\r\n  templateUrl: './navigation.component.html',\r\n  styleUrls: ['./navigation.component.css']\r\n})\r\nexport class NavigationComponent implements OnInit {\r\n  isUserDataLoaded = false;\r\n  isLoggedIn = false;\r\n  isDataLoaded = false;\r\n  user: IUser;\r\n  isDev=false;\r\n  isAdmin=false;\r\n\r\n  constructor(private tokenService: TokenStorageService,\r\n              private userService: UserService,\r\n              private router: Router) {\r\n  }\r\n  getRole(){\r\n    this.isDev=this.userService.isDevRole;\r\n    this.isAdmin=this.userService.isAdminRole;\r\n    this.isLoggedIn=this.userService.isAuth;\r\n  }\r\n  getRoleOld(){\r\n    this.isDev=this.userService.isDev(this.user.roles);\r\n    this.isAdmin=this.userService.isAdmin(this.user.roles);\r\n  }\r\n  ngOnInit(): void {\r\n    // проверка на то зашел ди пользователь на сайт если оставить \"!\" то происходит зацикливание\r\n    this.isLoggedIn = !!this.tokenService.getToken();\r\n\r\n    // if(this.isLoggedIn) {\r\n    //   this.userService.getCurrentUser()\r\n    //     .subscribe(data => {\r\n    //       this.user = data;\r\n    //       this.isDataLoaded = true;\r\n    //     })\r\n    // }\r\n  }\r\n  logout(): void {\r\n    this.tokenService.logOut();\r\n    this.router.navigate(['/app-login']);\r\n  }\r\n}\r\n","<button mat-button [matMenuTriggerFor]=\"taskMenu\">Мероприятия</button>\r\n<mat-menu #taskMenu=\"matMenu\" yPosition=\"above\">\r\n  <button mat-menu-item routerLink=\"add-task\">Добавить</button>\r\n  <button mat-menu-item routerLink=\"tasks\">Просмотр</button>\r\n  <button mat-menu-item routerLink=\"app-list-route\">Текущие задания</button>\r\n</mat-menu>\r\n\r\n<button [disabled]=\"!isDev\" mat-button [matMenuTriggerFor]=\"docsMenu\">Документы</button>\r\n<mat-menu #docsMenu=\"matMenu\" yPosition=\"below\">\r\n  <button mat-menu-item routerLink=\"app-add-document\">Добавить</button>\r\n  <button mat-menu-item routerLink=\"app-list-documents\">Просмотр</button>\r\n  <button mat-menu-item routerLink=\"app-list-react-docs\">Просмотр React</button>\r\n  <button mat-menu-item routerLink=\"#\">Редактировать</button>\r\n</mat-menu>\r\n\r\n<button [disabled]=\"!isAdmin\" mat-button [matMenuTriggerFor]=\"classifMenu\">Классификатор</button>\r\n<mat-menu #classifMenu=\"matMenu\" yPosition=\"below\">\r\n  <button mat-menu-item routerLink=\"app-list-users\">Пользователи</button>\r\n  <button mat-menu-item routerLink=\"app-list-priority\">Приоритеты заданий</button>\r\n</mat-menu>\r\n\r\n<button mat-button [matMenuTriggerFor]=\"logsMenu\" (click)=\"getRole()\">Войти</button>\r\n<mat-menu #logsMenu=\"matMenu\" yPosition=\"below\">\r\n  <button mat-menu-item routerLink=\"main\">На главную</button>\r\n  <button *ngIf=\"!isLoggedIn\" mat-menu-item routerLink=\"register\">Регистрация</button>\r\n  <button *ngIf=\"isLoggedIn\" mat-menu-item (click)=\"logout()\">Выход</button>\r\n  <button *ngIf=\"!isLoggedIn\" mat-menu-item routerLink=\"app-login\">Вход</button>\r\n</mat-menu>\r\n","import {NgModule} from '@angular/core';\r\nimport {MatIconModule} from '@angular/material/icon';\r\nimport {MatInputModule} from '@angular/material/input';\r\nimport {MatFormFieldModule} from '@angular/material/form-field';\r\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\r\nimport {MatToolbarModule} from '@angular/material/toolbar';\r\nimport {MatMenuModule} from '@angular/material/menu';\r\nimport {MatDividerModule} from '@angular/material/divider';\r\nimport {MatCardModule} from '@angular/material/card';\r\nimport {MatButtonModule} from '@angular/material/button';\r\nimport {MatDialogModule} from '@angular/material/dialog';\r\nimport {MatSelectModule} from '@angular/material/select';\r\nimport {MatDatepickerModule} from '@angular/material/datepicker';\r\nimport {MatNativeDateModule} from '@angular/material/core';\r\nimport {MatTableModule} from '@angular/material/table';\r\nimport {MatCheckboxModule} from '@angular/material/checkbox';\r\n\r\n@NgModule({\r\n  exports: [\r\n    MatIconModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatSnackBarModule,\r\n    MatButtonModule,\r\n    MatToolbarModule,\r\n    MatMenuModule,\r\n    MatDividerModule,\r\n    MatCardModule,\r\n    MatDialogModule,\r\n    MatSelectModule,\r\n    MatDatepickerModule,\r\n    MatNativeDateModule,\r\n    MatTableModule,\r\n    MatCheckboxModule\r\n  ]\r\n})\r\n\r\nexport class MaterialModule {\r\n}\r\n","import {DateService} from \"../service/date.service\";\r\n\r\nexport interface IDocumentModel {\r\n  id: number;\r\n  name: string;\r\n  nameFile: string;\r\n  file: File;\r\n  date: Date;\r\n  taskId: number;\r\n  employeeId: number;\r\n  note: string;\r\n  disabled:boolean;\r\n}\r\n\r\nexport class DocumentModel implements IDocumentModel {\r\n  id: number;\r\n  date: Date;\r\n  employeeId: number;\r\n  file: File;\r\n  name: string;\r\n  nameFile: string;\r\n  taskId: number;\r\n  userId: number;\r\n  note: string;\r\n  disabled: boolean;\r\n\r\n  constructor(value:IDocumentModel) {\r\n    this.id=value.id;\r\n    this.file=value.file;\r\n    this.name=value.name;\r\n    this.nameFile=value.nameFile;\r\n    this.note=value.note;\r\n    this.employeeId=value.employeeId;\r\n    this.taskId=value.taskId;\r\n    value.date==undefined ? new Date(): value.date;\r\n    this.disabled=false;\r\n  }\r\n}\r\n","export enum ERole{\r\n  ROLE_USER,\r\n  ROLE_LEVEL_1,\r\n  ROLE_LEVEL_2,\r\n  ROLE_LEVEL_3,\r\n  ROLE_ADMIN,\r\n  ROLE_DEV\r\n}\r\nexport interface IRole{\r\n  id:number;\r\n  title:string;\r\n  active:boolean;\r\n}\r\nexport class Role{\r\n  roles:IRole[];\r\n\r\n  constructor() {\r\n    this.roles=[\r\n      {id:0,title:\"Пользователь\",active:true},\r\n      {id:1,title:\"Руководитель уровня 1\",active:false},\r\n      {id:2,title:\"Руководитель уровня 2\",active:false},\r\n      {id:3,title:\"Руководитель уровня 3\",active:false},\r\n      {id:4,title:\"Администратор\",active:false},\r\n      {id:5,title:\"Разработчик\",active:false}\r\n    ]\r\n  }\r\n  public setRoles(eRole:any):void{\r\n    this.roles[1].active=eRole.indexOf(\"ROLE_LEVEL_1\") > -1;\r\n    this.roles[2].active=eRole.indexOf(\"ROLE_LEVEL_2\") > -1;\r\n    this.roles[3].active=eRole.indexOf(\"ROLE_LEVEL_3\") > -1;\r\n    this.roles[4].active=eRole.indexOf(\"ROLE_ADMIN\") > -1;\r\n    this.roles[5].active=eRole.indexOf(\"ROLE_DEV\") > -1;\r\n  }\r\n  public setSelectItems():string[]{\r\n    let selectItems:string[]=[];\r\n    this.roles.forEach(item=>{\r\n      if (item.active) selectItems.push(item.title);\r\n    });\r\n    return selectItems;\r\n  }\r\n}\r\n","export interface ICategory {\r\n  id?:number;\r\n  title:string;\r\n}\r\nexport class Category implements ICategory{\r\n  title: string;\r\n\r\n  constructor(title: string) {\r\n    this.title = title;\r\n  }\r\n}\r\n","export interface IEmployee {\r\n  id?: number;\r\n  firstname: string;\r\n  lastname: string;\r\n  fio: string;\r\n  patronymic: string;\r\n  initial: string;\r\n}\r\nexport class Employee implements IEmployee{\r\n  firstname: string;\r\n  lastname: string;\r\n\r\n  constructor(firstname: string, lastname: string) {\r\n    this.firstname = firstname;\r\n    this.lastname = lastname;\r\n    this.fio=\"\";\r\n    this.patronymic=\"\";\r\n    this.initial=\"\";\r\n  }\r\n\r\n  fio: string;\r\n  initial: string;\r\n  patronymic: string;\r\n}\r\n","import {IState, State} from \"./RouteTask\";\r\n\r\nexport interface IPriority {\r\n  id:number;\r\n  title:string;\r\n  color:string;\r\n  countDay:number;\r\n}\r\nexport class Priority implements IPriority{\r\n  id: number;\r\n  title: string;\r\n  color: string;\r\n  countDay: number;\r\n\r\n  constructor(priority:IPriority) {\r\n    this.id = priority.id;\r\n    this.title = priority.title;\r\n    this.color = priority.color;\r\n    this.countDay = priority.countDay;\r\n  }\r\n}\r\nexport class TypePriority{\r\n  id:number;\r\n  title:string;\r\n  value:string;\r\n\r\n\r\n  constructor(id: number, title: string, value:string) {\r\n    this.id = id;\r\n    this.title = title;\r\n    this.value=value;\r\n  }\r\n}\r\n\r\nexport class TypesPriority {\r\n  typesPriority: Array<TypePriority>;\r\n\r\n  constructor() {\r\n    this.typesPriority = [\r\n      {\"id\": 0, \"title\": \"Голубой\", \"value\":\"table-info\"},\r\n      {\"id\": 1, \"title\": \"Оранжевый\", \"value\":\"table-warning\"},\r\n      {\"id\": 2, \"title\": \"Красный\", \"value\":\"table-danger\"},\r\n      {\"id\": 3, \"title\": \"Зеленый\", \"value\":\"table-success\"},\r\n      {\"id\": 4, \"title\": \"Серый\", \"value\":\"table-light\"},\r\n    ];\r\n  }\r\n}\r\n","import {IUser,User} from \"./User\";\r\n\r\nexport interface IRouteTask{\r\n  id:number;\r\n  startId:number;\r\n  startUserFIO: string\r\n  destinationId:number;\r\n  destinationUserFIO:string;\r\n  taskId:number;\r\n  taskTitle:string;\r\n  taskReference:string;\r\n  date:Date;\r\n  state:number;\r\n  stateMessage:string;\r\n  note:string;\r\n}\r\n\r\nexport enum ERouteTask{\r\n    PROCESS,\r\n    SEND_AGREEMENT,\r\n    SEND_EMAIL,\r\n    REJECT,\r\n    AGREEMENT,\r\n    TERMINATE,\r\n    CANCELED\r\n}\r\n\r\nexport class RouteTask implements IRouteTask{\r\n  id:number;\r\n  startId:number;\r\n  startUserFIO: string\r\n  destinationId:number;\r\n  destinationUserFIO:string;\r\n  taskId:number;\r\n  taskTitle:string;\r\n  taskReference:string;\r\n  date:Date;\r\n  state:number;\r\n  stateMessage:string;\r\n  note:string;\r\n\r\n  constructor(destinationId: number, note: string, startId: number,taskId: number) {\r\n    this.date =new Date();\r\n    this.destinationId = destinationId;\r\n    this.destinationUserFIO=\"\";\r\n    this.note = note;\r\n    this.startId = startId;\r\n    this.startUserFIO=\"\";\r\n    this.state = ERouteTask.PROCESS;\r\n    this.taskId=taskId;\r\n    this.taskTitle=\"\";\r\n    this.taskReference=\"\";\r\n    this.taskId = taskId;\r\n    this.stateMessage=\"\";\r\n  }\r\n}\r\nexport interface IState{\r\n  id:number;\r\n  title:string;\r\n}\r\n\r\nexport class State implements IState{\r\n  id:number;\r\n  title:string;\r\n\r\n\r\n  constructor(id: number, title: string) {\r\n    this.id = id;\r\n    this.title = title;\r\n  }\r\n}\r\n\r\nexport class States{\r\n  states:Array<State>;\r\n\r\n  constructor() {\r\n    this.states = [\r\n      {\"id\": 0, \"title\": \"В процессе\"},\r\n      {\"id\": 1, \"title\": \"Направить на согласование\"},\r\n      {\"id\": 3, \"title\": \"Отклонить\"},\r\n      {\"id\": 4, \"title\": \"Согласовано\"},\r\n      {\"id\": 5, \"title\": \"Снять с контроля\"},\r\n      {\"id\": 6, \"title\": \"Завершить\"}\r\n    ];\r\n  }\r\n}\r\n","import {ERole, IRole, Role} from \"./ERole\";\r\n\r\nexport interface IUser {\r\n  id: number;\r\n  email: string;\r\n  username: string;\r\n  firstname: string;\r\n  lastname: string;\r\n  patronymic: string;\r\n  initial:string;\r\n  roles?:ERole[];\r\n  fio:string;\r\n}\r\nexport class User implements IUser{\r\n  id: number;\r\n  email: string;\r\n  username: string;\r\n  firstname: string;\r\n  lastname: string;\r\n  patronymic: string;\r\n  initial:string;\r\n  fio:string;\r\n\r\n  constructor (id:number, email:string, username:string, firstname:string, lastname:string, patronymic:string, initial:string){\r\n    this.id=id;\r\n    this.email=email;\r\n    this.username=username;\r\n    this.firstname=firstname;\r\n    this.lastname=lastname;\r\n    this.patronymic=patronymic;\r\n    this.initial=initial;\r\n  }\r\n}\r\nexport class UserRoles extends User{\r\n  public roles:Role;\r\n  constructor(id: number, email: string, username: string, firstname: string, lastname: string, patronymic: string, initial: string, eRole:any) {\r\n    super(id, email, username, firstname, lastname, patronymic, initial);\r\n    this.roles=new Role();\r\n    this.roles.setRoles(eRole);\r\n    super.fio=lastname+\" \"+initial;\r\n  }\r\n}\r\n","import {Component, OnInit, ViewChild} from '@angular/core';\r\nimport {PriorityService} from \"../../service/priority.service\";\r\nimport {UserService} from \"../../service/user.service\";\r\nimport {NotificationService} from \"../../service/notification.service\";\r\nimport {FormBuilder, FormGroup, Validators} from \"@angular/forms\";\r\nimport {Router} from \"@angular/router\";\r\nimport {IUser} from \"../../models/User\";\r\nimport {IPriority, Priority, TypesPriority} from \"../../models/Priority\";\r\nimport {MatTable} from \"@angular/material/table\";\r\n\r\n@Component({\r\n  selector: 'app-list-priority',\r\n  templateUrl: './list-priority.component.html',\r\n  styleUrls: ['./list-priority.component.css']\r\n})\r\nexport class ListPriorityComponent implements OnInit {\r\n  isUserDataLoaded = false;\r\n  isPriorityLoaded = false;\r\n  isAdmin = false;\r\n  displayedColumns: string[] = ['title', 'countDay'];\r\n  dataSource: Array<Priority>;\r\n  isDataSourceLoaded = false;\r\n  itemDataSource: Priority;\r\n  public _priorityForm: FormGroup;\r\n  updateAction = false;\r\n  addAction = false;\r\n  typesPriority:TypesPriority;\r\n  alarmColor:string;\r\n\r\n  @ViewChild(MatTable) table: MatTable<IPriority>;\r\n\r\n  user: IUser;\r\n  priorities: IPriority[];\r\n\r\n  title: String;\r\n  countDay: number;\r\n\r\n  constructor(\r\n    private priorityService: PriorityService,\r\n    private userService: UserService,\r\n    private notificationService: NotificationService,\r\n    private fb: FormBuilder,\r\n    private router: Router) {\r\n\r\n    this.title = \"\";\r\n    this.countDay = 0;\r\n    this.dataSource = new Array<Priority>();\r\n    this.typesPriority=new TypesPriority();\r\n    this.alarmColor=null;\r\n\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.userService.getCurrentUser()\r\n      .subscribe(data => {\r\n        this.user = data;\r\n        this.userService.setUser(this.user);\r\n        this.isAdmin = this.userService.isAdmin(this.user.roles);\r\n        this.isUserDataLoaded = true;\r\n      });\r\n    this.viewPriorities();\r\n    this._createForm();\r\n  }\r\n\r\n  _createForm(): FormGroup {\r\n    return this._priorityForm = this.fb.group({\r\n      title: [this.title, Validators.required],\r\n      countDay: [this.countDay]\r\n    });\r\n  }\r\n\r\n  viewPriorities(): void {\r\n    this.priorityService.listPriorityByDay()\r\n      .subscribe(data => {\r\n        data.forEach(item => {\r\n          this.itemDataSource = new Priority(item);\r\n          this.dataSource.push(this.itemDataSource);\r\n        });\r\n        this.priorities = data;\r\n        this.isPriorityLoaded = true;\r\n      });\r\n\r\n  }\r\n\r\n  selectAlarmColor(event:any){\r\n    console.log(\"selectHandler:\",event);\r\n    this.alarmColor=event.value;\r\n  }\r\n\r\n  deletePriority(index: number): void {\r\n    console.log(index);\r\n  }\r\n\r\n  updatePriority(index: number): void {\r\n    console.log(this.priorities[index]);\r\n    this.addAction = false;\r\n    this.updateAction = true;\r\n  }\r\n\r\n  submitUpdateOld(priority:IPriority): void {\r\n    console.log(\"submitUpdate()\", priority);\r\n  }\r\n\r\n  submitUpdate(priority:IPriority, title:string, countDay:any): void {\r\n    let submitAction=false;\r\n    let iCountDay=Number(countDay);\r\n    if (priority.title!=title){\r\n      priority.title=title;\r\n      submitAction=true;\r\n    }\r\n    if(priority.countDay!=iCountDay){\r\n      priority.countDay=iCountDay;\r\n      submitAction=true;\r\n    }\r\n    if(this.alarmColor!=null){\r\n      priority.color=this.alarmColor;\r\n      submitAction=true;\r\n      this.alarmColor=null;\r\n    }\r\n    if (submitAction){\r\n      this.priorityService.updatePriority(priority)\r\n        .subscribe(data=>{\r\n          this.notificationService.showSnackBar(data.message);\r\n        },error => {\r\n          this.notificationService.showSnackBar(error.message);\r\n        })\r\n    }\r\n  }\r\n\r\n  submitAdd(): void {\r\n    console.log(\"submitAdd()\", this._priorityForm.value)\r\n  }\r\n\r\n  addPriority(): void {\r\n    console.log(\"addPriority()\");\r\n    this.addAction = true;\r\n    this.updateAction = false;\r\n  }\r\n\r\n  viewPriority(row: any): void {\r\n    console.log(row);\r\n    this.title = row.title;\r\n    this.countDay = row.countDay;\r\n    this._priorityForm.value.title=this.title;\r\n    this._priorityForm.value.countDay=this.countDay;\r\n  }\r\n\r\n}\r\n","<div>\r\n  <h1>Перечень возможных приоритетов задач</h1>\r\n  <div class=\"table-wrapper content\">\r\n    <table id=\"list-table\" class=\"table table-hover table-bordered\">\r\n      <thead>\r\n      <tr>\r\n        <th scope=\"col\" width=\"3%\">N</th>\r\n        <th scope=\"col\" width=\"20%\">Тип</th>\r\n        <th scope=\"col\" width=\"5%\">Кол-во дней до сигнализации</th>\r\n        <th scope=\"col\" width=\"5%\">Цвет сигнализации</th>\r\n        <th scope=\"col\" width=\"15%\">Действие</th>\r\n      </tr>\r\n      </thead>\r\n      <tbody>\r\n      <tr *ngFor=\"let priority of priorities; let i=index\">\r\n        <th scope=\"row\">{{i+1}}</th>\r\n        <td>\r\n          <mat-form-field class=\"title-table-width\" appearance=\"fill\">\r\n            <input matInput #title [value]=priority.title type=\"text\" maxlength=\"256\">\r\n          </mat-form-field>\r\n        </td>\r\n        <td>\r\n          <mat-form-field class=\"count-day-table-width\" appearance=\"fill\">\r\n            <input matInput #countDay [value]=priority.countDay.toString() type=\"number\" min=\"0\" max=\"30\">\r\n          </mat-form-field>\r\n        </td>\r\n        <td>\r\n          <mat-form-field class=\"title-table-width\" appearance=\"fill\">\r\n            <mat-select #color [(value)]=\"priority.color\" (selectionChange)=\"selectAlarmColor($event)\">\r\n              <mat-option  *ngFor=\"let type of typesPriority.typesPriority\" [value]=\"type.value\">\r\n                {{type.title}}\r\n              </mat-option>\r\n            </mat-select>\r\n          </mat-form-field>\r\n        </td>\r\n        <td>\r\n          <button color=\"primary\" class=\"button-table-width\"\r\n                  [disabled]=\"title.value.length < 1\"\r\n                  (click)=\"submitUpdate(priority,title.value, countDay.value)\"\r\n                  mat-button disableRipple>\r\n            Обновить\r\n          </button>\r\n        </td>\r\n\r\n      </tr>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n</div>\r\n","import {Component, Input, OnInit} from '@angular/core';\r\nimport {IUser} from \"../../models/User\";\r\nimport {UserService} from \"../../service/user.service\";\r\nimport {State, States} from \"../../models/RouteTask\";\r\nimport {RouteService} from \"../../service/route.service\";\r\nimport {NotificationService} from \"../../service/notification.service\";\r\nimport {FormBuilder, FormGroup, Validators} from \"@angular/forms\";\r\nimport {Router} from \"@angular/router\";\r\nimport {TaskService} from \"../../service/task.service\";\r\nimport {DateService} from \"../../service/date.service\";\r\nimport {Codes} from \"../../service/Codes\";\r\n\r\n@Component({\r\n  selector: 'app-add-route',\r\n  templateUrl: './add-route.component.html',\r\n  styleUrls: ['./add-route.component.css']\r\n})\r\n\r\nexport class AddRouteComponent implements OnInit {\r\n  user:IUser;\r\n  isUserDataLoaded = false;\r\n  isAdmin = false;\r\n  isUser = false;\r\n  isRolesLoaded = false;\r\n\r\n  startUsers: IUser[];\r\n  destUsers: IUser[];\r\n  isUsersDataLoaded: boolean;\r\n  routeForm: FormGroup;\r\n  states: States;\r\n  sendEmail: boolean;\r\n  codes:Codes;\r\n\r\n  constructor(private userService: UserService,\r\n              public dateService: DateService,\r\n              private routeService: RouteService,\r\n              private taskService: TaskService,\r\n              private notificationService: NotificationService,\r\n              private fb: FormBuilder,\r\n              private router: Router) {\r\n    this.userService.getAll()\r\n      .subscribe(data => {\r\n        this.startUsers = data;\r\n        this.destUsers = this.startUsers.slice();\r\n        this.isUsersDataLoaded = true;\r\n      }), error => {\r\n      this.isUsersDataLoaded = false;\r\n      this.startUsers = null;\r\n      this.destUsers = null;\r\n    };\r\n    this.states = new States();\r\n    this.sendEmail=true;\r\n    this.codes=new Codes();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this._createFormBuilder();\r\n  }\r\n\r\n  ngOmLoad(): void {\r\n    this.user=this.userService.getUser();\r\n    this.isAdmin = this.userService.isAdmin(this.user.roles);\r\n    this.isUser = this.userService.isUser(this.user.roles);\r\n    this.isRolesLoaded = true;\r\n  }\r\n\r\n  private _createFormBuilder(): FormGroup {\r\n    this.ngOmLoad();\r\n    return this.routeForm = this.fb.group({\r\n      start: [this.startUsers, Validators.required],\r\n      destination: [this.destUsers, Validators.required],\r\n      state: [this.states.states, Validators.required],\r\n      note: [this.routeService.routeTask.note],\r\n      sendEmail:[this.sendEmail]\r\n    })\r\n  }\r\n\r\n  agreement(): void {\r\n    this.routeService.createRouteTask({\r\n      taskId: this.taskService.task.id,\r\n      startId: this.routeForm.value.start,\r\n      destinationId: this.routeForm.value.destination,\r\n      note: this.routeForm.value.note,\r\n      state: this.routeForm.value.state,\r\n      sendEmail:this.routeForm.value.sendEmail?this.codes.SEND_EMAIL:this.codes.NO_SEND_EMAIL\r\n    }).subscribe(data => {\r\n      const errMessage = (\"Задаче установлен признак: \" + this.states.states[this.routeForm.value.state].title);\r\n      this.notificationService.showSnackBar(errMessage);\r\n      this.router.navigate(['tasks']);\r\n    }, error => {\r\n      this.notificationService.showSnackBar(error);\r\n    });\r\n    this.setCompletedTask();\r\n  }\r\n\r\n  setCompletedTask():void {\r\n    this.taskService.updateCompletedTask({\r\n      id: this.taskService.task.id,\r\n      completed:this.routeForm.value.state\r\n    }).subscribe(data=>{\r\n      this.notificationService.showSnackBar(data);\r\n    },error => {\r\n      this.notificationService.showSnackBar(error.message);\r\n    });\r\n  }\r\n  inputHandler(event:any){\r\n    // var currentDate=new Date();\r\n    var currentDate=this.dateService.date.getValue().format(\"DD.MM.YYYY\");\r\n\r\n    const noteReact=\"Задача сформирована: \"+currentDate+\", статус: \"+this.getState(this.routeForm.value.state);\r\n    this.routeService.routeTask.note=noteReact;\r\n    this.routeForm.value.note=noteReact;\r\n  }\r\n  getState(id:number):string{\r\n    let title='';\r\n    this.states.states.forEach(state=>{\r\n      if (state.id==id)\r\n        title=state.title;\r\n        return title;\r\n    })\r\n    return title;\r\n  }\r\n\r\n}\r\n","<div *ngIf=\"isUsersDataLoaded\" class=\"route-form button_row\">\r\n  <hi>Создание маршрута по задаче:</hi>\r\n  <p>{{dateService.date | async | moment}}</p>\r\n  <p>{{taskService.task.title}}</p>\r\n\r\n  <form [formGroup]=\"routeForm\" >\r\n    <h5>От:</h5>\r\n    <mat-form-field>\r\n      <mat-label>Исполнители</mat-label>\r\n      <div *ngIf=\"isAdmin\">\r\n        <mat-select formControlName=\"start\">\r\n          <mat-option  *ngFor=\"let startUser of startUsers\" [value]=\"startUser.id\" >\r\n            {{startUser.lastname}}&nbsp;{{startUser.initial}}\r\n          </mat-option>\r\n        </mat-select>\r\n      </div>\r\n      <div *ngIf=\"!isAdmin\">\r\n        <mat-select formControlName=\"start\" [disabled]=\"isAdmin\">\r\n          <mat-option value={{user.id}}>{{user.lastname}} {{user.initial}}</mat-option>\r\n        </mat-select>\r\n      </div>\r\n    </mat-form-field>\r\n\r\n    <h5>Кому:</h5>\r\n    <mat-form-field>\r\n      <mat-label>Согласующие</mat-label>\r\n      <mat-select formControlName=\"destination\">\r\n        <mat-option  *ngFor=\"let destUser of destUsers\" [value]=\"destUser.id\" >\r\n          {{destUser.lastname}}&nbsp;{{destUser.initial}}\r\n        </mat-option>\r\n      </mat-select>\r\n    </mat-form-field>\r\n\r\n    <h5>Тип:</h5>\r\n    <mat-form-field>\r\n      <mat-label>Тип согласования</mat-label>\r\n      <mat-select formControlName=\"state\" (selectionChange)=\"inputHandler($event)\">\r\n        <mat-option  *ngFor=\"let state of states.states\" [value]=\"state.id\">\r\n          {{state.title}}\r\n        </mat-option>\r\n      </mat-select>\r\n    </mat-form-field>\r\n    <mat-form-field class=\"route-note\" appearance=\"fill\">\r\n      <mat-label>Примечание:</mat-label>\r\n      <textarea matInput formControlName=\"note\" [value]=\"routeService.routeTask.note\"></textarea>\r\n    </mat-form-field>\r\n    <br>\r\n    <mat-checkbox class=\"checkbox\" [(ngModel)]=\"sendEmail\">Отправить согласующему уведомление по электронной почте</mat-checkbox>\r\n    <div class=\"mat-button\">\r\n      <button mat-button color=\"primary\" [disabled]=\"routeForm.invalid\" (click)=\"agreement()\">\r\n        Направить\r\n      </button>\r\n    </div>\r\n  </form>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {UserService} from \"../../service/user.service\";\r\nimport {RouteService} from \"../../service/route.service\";\r\nimport {IUser} from \"../../models/User\";\r\nimport {IRouteTask} from \"../../models/RouteTask\";\r\nimport {TaskService} from \"../../service/task.service\";\r\nimport {Router} from \"@angular/router\";\r\nimport {ITask} from \"../../models/Task\";\r\nimport {NotificationService} from \"../../service/notification.service\";\r\n\r\n@Component({\r\n  selector: 'app-list-route',\r\n  templateUrl: './list-route.component.html',\r\n  styleUrls: ['./list-route.component.css']\r\n})\r\nexport class ListRouteComponent implements OnInit {\r\n  isUserDataLoaded = false;\r\n  isRouteTaskLoaded = false;\r\n  user:IUser;\r\n  routeTaskList:IRouteTask[];\r\n  task:ITask;\r\n\r\n  constructor(private routeService: RouteService,\r\n              private taskService: TaskService,\r\n              private router: Router,\r\n              private notificationService: NotificationService,\r\n              private userService: UserService) {\r\n    this.userService.getCurrentUser()\r\n      .subscribe(data => {\r\n        this.user = data;\r\n        this.isUserDataLoaded = true;\r\n      });\r\n   }\r\n\r\n  setCurrentTask(id: number): void {\r\n    this.taskService.getTaskById(id).subscribe(data=>{\r\n      this.taskService.setTask(data);\r\n      this.router.navigate(['app-send-task']);\r\n      this.notificationService.showSnackBar(\"Переход на задачу\");\r\n    },error => {\r\n      this.notificationService.showSnackBar(error);\r\n    })\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  getRouteByUserId():void{\r\n    this.userService.setUser(this.user);\r\n    this.routeService.getRouteTaskByUserId(this.user.id)\r\n      .subscribe(data=>{\r\n        this.routeTaskList=data;\r\n        this.isRouteTaskLoaded=true;\r\n      });\r\n  }\r\n\r\n  getRouteByStartId():void{\r\n    this.userService.setUser(this.user);\r\n    this.routeService.getRouteTaskByStartId(this.user.id)\r\n      .subscribe(data=>{\r\n        this.routeTaskList=data;\r\n        this.isRouteTaskLoaded=true;\r\n      });\r\n  }\r\n  getRouteByDestinationId():void{\r\n    this.userService.setUser(this.user);\r\n    this.routeService.getRouteTaskByDestinationId(this.user.id)\r\n      .subscribe(data=>{\r\n        this.routeTaskList=data;\r\n        this.isRouteTaskLoaded=true;\r\n      });\r\n  }\r\n\r\n  getRouteByTaskId(taskId:number):void{\r\n    this.routeService.getRouteTaskByTaskId(taskId)\r\n      .subscribe(data=>{\r\n        this.routeTaskList=data;\r\n        this.isRouteTaskLoaded=true;\r\n      });\r\n  }\r\n\r\n}\r\n","<h2>Текущие задания:</h2>\r\n<button mat-button [disabled]=\"!isUserDataLoaded\" (click)=\"getRouteByUserId()\">\r\n  Все\r\n</button>\r\n<button mat-button [disabled]=\"!isUserDataLoaded\" (click)=\"getRouteByStartId()\">\r\n  Исходящие\r\n</button>\r\n<button mat-button [disabled]=\"!isUserDataLoaded\" (click)=\"getRouteByDestinationId()\">\r\n  Входящие\r\n</button>\r\n<div *ngIf=\"isRouteTaskLoaded\">\r\n  <div class=\"table-wrapper content\">\r\n    <table id=\"list-table\" class=\"table table-hover table-bordered\">\r\n      <thead>\r\n      <tr>\r\n        <th scope=\"col\" width=\"3%\">N</th>\r\n        <th scope=\"col\" width=\"20%\">Задача</th>\r\n        <th scope=\"col\" width=\"5%\">Дата</th>\r\n        <th scope=\"col\" width=\"10%\">Тип</th>\r\n        <th scope=\"col\" width=\"20%\">Автор</th>\r\n        <th scope=\"col\" width=\"20%\">Адресат</th>\r\n        <th scope=\"col\" width=\"20%\">Примечание</th>\r\n      </tr>\r\n      </thead>\r\n      <tbody>\r\n      <tr *ngFor=\"let routeTask of routeTaskList; let i = index\">\r\n        <th scope=\"row\" width=\"3%\">{{i+1}}</th>\r\n        <td width=\"20%\">\r\n          <a class=\"btn btn-warning\"  (click)=\"setCurrentTask(routeTask.taskId)\" title=\"Просмотр задачи, отправка на согласование\">\r\n            {{routeTask.taskTitle}}</a>\r\n        </td>\r\n        <td width=\"5%\">{{routeTask.date}}</td>\r\n        <td width=\"10%\">{{routeTask.stateMessage}}</td>\r\n        <td width=\"20%\">{{routeTask.startUserFIO}}</td>\r\n        <td width=\"20%\">{{routeTask.destinationUserFIO}}</td>\r\n        <td width=\"20%\">{{routeTask.note}}</td>\r\n      </tr>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n</div>\r\n","export class Codes{\r\n  NO_SEND_EMAIL:number;\r\n  SEND_EMAIL:number;\r\n  constructor() {\r\n    this.NO_SEND_EMAIL=10;\r\n    this.SEND_EMAIL=11;\r\n  }\r\n}\r\n","export class Conf{\r\n  AUTH_API:string;\r\n  CATEGORY_API:string;\r\n  UPLOAD_API:string;\r\n  EMPLOYEE_API:string;\r\n  PRIORITY_API:string;\r\n  ROUTE_TASK_API:string;\r\n  TASK_API:string;\r\n  TOKEN_KEY:string;\r\n  USER_KEY:string;\r\n  USER_API:string;\r\n  HOST:string;\r\n  TESTING: string;\r\n\r\n  constructor() {\r\n    this.TESTING='/api/auth/test';\r\n    this.AUTH_API='/api/auth/';\r\n    this.CATEGORY_API='/api/category/';\r\n    this.UPLOAD_API='/api/docs/';\r\n    this.EMPLOYEE_API ='/api/employee/';\r\n    this.PRIORITY_API ='/api/priority/';\r\n    this.ROUTE_TASK_API ='/api/route/';\r\n    this.TASK_API ='/api/task/';\r\n    this.TOKEN_KEY = 'auth-token';\r\n    this.USER_KEY = 'auth-user';\r\n    this.USER_API ='/api/user/';\r\n\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {HttpClient, HttpHeaders} from \"@angular/common/http\";\r\nimport {Observable} from \"rxjs\";\r\nimport {Conf} from \"./Conf\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n  conf: Conf;\r\n\r\n  constructor(private http: HttpClient) {\r\n    this.conf = new Conf();\r\n  }\r\n\r\n  public testHost() {\r\n    this.http.get(this.conf.TESTING, {\r\n      // headers: {\r\n      //   'Access-Control-Allow-Origin': '*'\r\n      // }\r\n    })\r\n      .subscribe(res => console.log(res));\r\n  }\r\n\r\n  public login(user: { username: any; password: any; }): Observable<any> {\r\n    return this.http.post(this.conf.AUTH_API + 'signin', {\r\n      headers: new HttpHeaders({\r\n        'Access-Control-Allow-Origin': '*'\r\n      }),\r\n      username: user.username,\r\n      password: user.password\r\n    });\r\n  }\r\n\r\n  public loginOld(user: { username: any; password: any; }): Observable<any> {\r\n    return this.http.post(this.conf.AUTH_API + 'signin', {\r\n      username: user.username,\r\n      password: user.password\r\n    });\r\n  }\r\n\r\n  public register(user: {\r\n    email: any;\r\n    username: any;\r\n    firstname: any;\r\n    lastname: any;\r\n    patronymic: any;\r\n    initial: any;\r\n    password: any;\r\n    confirmPassword: any;\r\n  }): Observable<any> {\r\n    return this.http.post(this.conf.AUTH_API + 'signup', {\r\n      email: user.email,\r\n      username: user.username,\r\n      firstname: user.firstname,\r\n      lastname: user.lastname,\r\n      patronymic: user.patronymic,\r\n      initial: user.initial,\r\n      password: user.password,\r\n      confirmPassword: user.confirmPassword\r\n    });\r\n  }\r\n\r\n  public registerWithRoles(user: {\r\n    email: any;\r\n    username: any;\r\n    firstname: any;\r\n    lastname: any;\r\n    patronymic: any;\r\n    initial: any;\r\n    password: any;\r\n    confirmPassword: any;\r\n    roles: any;\r\n  }): Observable<any> {\r\n    return this.http.post(this.conf.AUTH_API + 'signup_roles', {\r\n      email: user.email,\r\n      username: user.username,\r\n      firstname: user.firstname,\r\n      lastname: user.lastname,\r\n      patronymic: user.patronymic,\r\n      initial: user.initial,\r\n      password: user.password,\r\n      confirmPassword: user.confirmPassword,\r\n      roles: user.roles\r\n    });\r\n  }\r\n\r\n  public updateUser(user: {\r\n    id: any;\r\n    email: any;\r\n    username: any;\r\n    firstname: any;\r\n    lastname: any;\r\n    patronymic: any;\r\n    initial: any;\r\n    roles: any;\r\n  }): Observable<any> {\r\n    return this.http.post(this.conf.USER_API + 'update', {\r\n      id:user.id,\r\n      email: user.email,\r\n      username: user.username,\r\n      firstname: user.firstname,\r\n      lastname: user.lastname,\r\n      patronymic: user.patronymic,\r\n      initial: user.initial,\r\n      roles: user.roles\r\n    });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {Observable} from \"rxjs\";\r\nimport {HttpClient} from \"@angular/common/http\";\r\nimport {Conf} from \"./Conf\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CategoryService {\r\n  conf:Conf;\r\n  constructor(private http: HttpClient) {\r\n    this.conf=new Conf();\r\n  }\r\n\r\n  listCategory(): Observable<any> {\r\n    return this.http.get(this.conf.CATEGORY_API + 'all');\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport * as moment from 'moment';\r\nimport {BehaviorSubject} from \"rxjs\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DateService {\r\n  public date: BehaviorSubject<moment.Moment>=new BehaviorSubject(moment())\r\n\r\n  constructor() {\r\n  }\r\n\r\n  changeDay(countDay:number):any{\r\n    const value = this.date.value.add(countDay,'day');\r\n    return this.date.next(value);\r\n  }\r\n\r\n  changeMonth(dir: number):any {\r\n    const value = this.date.value.add(dir, 'month');\r\n    return this.date.next(value);\r\n  }\r\n\r\n  changeDate(date: moment.Moment) {\r\n    const value = this.date.value.set({\r\n      date: date.date(),\r\n      day: date.day()\r\n    })\r\n    this.date.next(value)\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {HttpClient} from \"@angular/common/http\";\r\nimport {Observable} from \"rxjs\";\r\nimport {DocumentModel, IDocumentModel} from \"../models/DocumentModel\";\r\nimport {TaskService} from \"./task.service\";\r\nimport {Conf} from \"./Conf\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DocumentUploadService {\r\n  docModel:DocumentModel;\r\n  previewImgURL:any;\r\n  documentImage: File;\r\n  conf:Conf;\r\n\r\n  constructor(private taskService:TaskService,\r\n              private http:HttpClient) {\r\n    this.docModel=new DocumentModel({\r\n      id:1,\r\n      name:\"Новый документ\",\r\n      nameFile: \"Файл еще не выбран\",\r\n      file: null,\r\n      date: null,\r\n      taskId: 1,\r\n      employeeId: 1,\r\n      note: \"\",\r\n      disabled:false});\r\n    this.previewImgURL=null;\r\n    this.documentImage=null;\r\n    this.conf=new Conf();\r\n  }\r\n\r\n  public addDocument(document:DocumentModel): Observable<any> {\r\n    return this.http.post(this.conf.UPLOAD_API + \"add\", {\r\n      name: document.name,\r\n      file: document.file,\r\n      employeeId: document.employeeId,\r\n      taskId: document.taskId,\r\n      userId: document.userId,\r\n      note:document.note\r\n    });\r\n  }\r\n\r\n  public uploadDocument(document:DocumentModel):Observable<any>{\r\n    const uploadData = new FormData();\r\n    uploadData.append('file', document.file);\r\n    return this.http.post(this.conf.UPLOAD_API +document.id+ \"/upload\", uploadData);\r\n  }\r\n\r\n  download(id:number): Observable<Blob> {\r\n    return this.http.get(this.conf.UPLOAD_API+id, {\r\n      responseType: 'blob'\r\n    });\r\n  }\r\n\r\n  deleteDocument(id:number):any{\r\n    return this.http.get(this.conf.UPLOAD_API+'delete/'+id);\r\n  }\r\n\r\n  getDocumentsToTask(taskId: number): any {\r\n    return this.http.get(this.conf.UPLOAD_API + taskId + '/documents');\r\n  }\r\n\r\n  getDocument(id: number):Observable<any>{\r\n    return this.http.get(this.conf.UPLOAD_API+id+'/document')\r\n  }\r\n\r\n}\r\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\nimport {Observable} from \"rxjs\";\nimport {IEmployee} from \"../models/IEmployee\";\nimport {Conf} from \"./Conf\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EmployeeService {\n  conf:Conf;\n  constructor(private http: HttpClient) {\n    this.conf=new Conf();\n  }\n\n  getEmployeeById(id: number): Observable<any> {\n    return this.http.get(this.conf.EMPLOYEE_API + 'id/' + id);\n  }\n\n  updateEmployee(employee: any): Observable<any> {\n    return this.http.post(this.conf.EMPLOYEE_API + 'update', employee);\n  }\n\n  createEmployee(employee: IEmployee): Observable<any> {\n    return this.http.post(this.conf.EMPLOYEE_API + 'add', employee);\n  }\n\n  deleteEmployee(id: number): Observable<any> {\n    return this.http.get(this.conf.EMPLOYEE_API + 'delete/' + id);\n  }\n\n  listEmployee(): Observable<any> {\n    return this.http.get(this.conf.EMPLOYEE_API + 'all');\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {MatSnackBar} from \"@angular/material/snack-bar\";\n\n@Injectable({\n  providedIn: 'root'\n})\n\n/**Создаем класс который будет вызываться для подтверждения удачной отработки наших сервисов */\nexport class NotificationService {\n\n  constructor(private snackbar: MatSnackBar) {\n  }\n\n  public showSnackBar(message: string): void {\n    this.snackbar.open(message, null, {\n      duration: 1000\n    });\n  }\n}\n","import {Injectable} from '@angular/core';\r\nimport {HttpClient} from \"@angular/common/http\";\r\nimport {Observable} from \"rxjs\";\r\nimport {Conf} from \"./Conf\";\r\nimport {IPriority} from \"../models/Priority\";\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PriorityService {\r\n  conf: Conf;\r\n\r\n  constructor(private http: HttpClient) {\r\n    this.conf = new Conf();\r\n  }\r\n\r\n  getPriorityById(id: number): Observable<any> {\r\n    return this.http.get(this.conf.PRIORITY_API + 'id/' + id);\r\n  }\r\n\r\n  listPriority(): Observable<any> {\r\n    return this.http.get(this.conf.PRIORITY_API + 'all');\r\n  }\r\n\r\n  listPriorityByDay(): Observable<any> {\r\n    return this.http.get(this.conf.PRIORITY_API + 'all_dayDesc');\r\n  }\r\n\r\n  addPriority(priority: IPriority): Observable<any> {\r\n    return this.http.post(this.conf.PRIORITY_API + 'add', priority);\r\n  }\r\n\r\n  updatePriority(priority: IPriority): Observable<any> {\r\n    return this.http.post(this.conf.PRIORITY_API + 'update', priority);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {RouteTask} from \"../models/RouteTask\";\r\nimport {HttpClient} from \"@angular/common/http\";\r\nimport {Observable} from \"rxjs\";\r\nimport {Conf} from \"./Conf\";\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class RouteService {\r\n  routeTask:RouteTask;\r\n  isLoadData:boolean;\r\n  conf:Conf;\r\n\r\n  constructor(private http:HttpClient) {\r\n    this.routeTask=new RouteTask(0,\"Создан новый маршрут\",1,1);\r\n    this.isLoadData = false;\r\n    this.conf=new Conf();\r\n  }\r\n\r\n  public createRouteTask(routeTask:{\r\n    taskId: any;\r\n    startId: any;\r\n    destinationId: any;\r\n    note: any;\r\n    state: any;\r\n    sendEmail: any;\r\n  }):Observable<any>{\r\n    return this.http.post(this.conf.ROUTE_TASK_API+\"add\",{\r\n      startId:routeTask.startId,\r\n      destinationId:routeTask.destinationId,\r\n      taskId:routeTask.taskId,\r\n      state:routeTask.state,\r\n      note:routeTask.note,\r\n      sendEmail:routeTask.sendEmail\r\n    })\r\n  }\r\n\r\n  public updateRouteTask(routeTask:{\r\n    id:any;\r\n    taskId: any;\r\n    startId: any;\r\n    destinationId: any;\r\n    note: any;\r\n    state: any;\r\n  }):Observable<any>{\r\n    return this.http.post(this.conf.ROUTE_TASK_API+\"update\",{\r\n      id:routeTask.id,\r\n      startId:routeTask.startId,\r\n      destinationId:routeTask.destinationId,\r\n      taskId:routeTask.taskId,\r\n      state:routeTask.state,\r\n      note:routeTask.note\r\n    })\r\n  }\r\n\r\n  listRouteTask(): Observable<any> {\r\n    return this.http.get(this.conf.ROUTE_TASK_API + \"all\");\r\n  }\r\n\r\n  getRouteTaskByTaskId(id:number):Observable<any>{\r\n    return this.http.get(this.conf.ROUTE_TASK_API+\"all_to_task/\"+id);\r\n  }\r\n\r\n  getRouteTaskByUserId(id:number):Observable<any>{\r\n    return this.http.get(this.conf.ROUTE_TASK_API+\"all_to_user/\"+id);\r\n  }\r\n\r\n  getRouteTaskByStartId(id:number):Observable<any>{\r\n    return this.http.get(this.conf.ROUTE_TASK_API+\"all_to_start/\"+id);\r\n  }\r\n\r\n  getRouteTaskByDestinationId(id:number):Observable<any>{\r\n    return this.http.get(this.conf.ROUTE_TASK_API+\"all_to_dest/\"+id);\r\n  }\r\n\r\n  delete(id:number):Observable<any>{\r\n    return this.http.get(this.conf.ROUTE_TASK_API+\"delete/\"+id);\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\nimport {Observable} from \"rxjs\";\nimport {ITask} from \"../models/Task\";\nimport {Conf} from \"./Conf\";\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class TaskService {\n  task: ITask;\n  currentTaskId: number;\n  isLoadData: boolean;\n  conf: Conf;\n\n  constructor(private http: HttpClient) {\n    this.isLoadData = false;\n    this.conf = new Conf();\n  }\n\n  public createTaskExtend(task: {\n    title: any;\n    reference: any;\n    employeeId: any;\n    priorityId: any;\n    categoryId: any;\n    dateControl: any;\n    note: any;\n    teamliedId: any;\n  }): Observable<any> {\n    return this.http.post(this.conf.TASK_API + \"add_extend\", {\n      title: task.title,\n      reference: task.reference,\n      employeeId: task.employeeId,\n      priorityId: task.priorityId,\n      categoryId: task.categoryId,\n      dateControl: task.dateControl,\n      note: task.note,\n      id: task.teamliedId\n    });\n  }\n\n  public createTask(task: {\n    title: any;\n    reference: any;\n    employeeId: any;\n    priorityId: any;\n    categoryId: any;\n    dateControl: any;\n    note: any;\n  }): Observable<any> {\n    return this.http.post(this.conf.TASK_API + \"add\", {\n      title: task.title,\n      reference: task.reference,\n      employeeId: task.employeeId,\n      priorityId: task.priorityId,\n      categoryId: task.categoryId,\n      dateControl: task.dateControl,\n      note: task.note\n    });\n  }\n\n  public updateTask(task: {\n    id: any;\n    title: any;\n    reference: any;\n    employeeId: any;\n    priorityId: any;\n    categoryId: any;\n    dateControl: any;\n    note: any;\n    completed: any;\n  }): Observable<any> {\n    return this.http.post(this.conf.TASK_API + \"update\", {\n      id: task.id,\n      title: task.title,\n      reference: task.reference,\n      employeeId: task.employeeId,\n      priorityId: task.priorityId,\n      categoryId: task.categoryId,\n      dateControl: task.dateControl,\n      note: task.note,\n      completed: task.completed\n    });\n  }\n\n  public updateTeamliedTask(task: {\n    id: any;\n    title: any;\n    reference: any;\n    employeeId: any;\n    priorityId: any;\n    categoryId: any;\n    dateControl: any;\n    note: any;\n    completed: any;\n    teamliedId: any;\n  }): Observable<any> {\n    return this.http.post(this.conf.TASK_API + \"update_teamlied\", {\n      id: task.id,\n      title: task.title,\n      reference: task.reference,\n      employeeId: task.employeeId,\n      priorityId: task.priorityId,\n      categoryId: task.categoryId,\n      dateControl: task.dateControl,\n      note: task.note,\n      completed: task.completed,\n      teamliedId: task.teamliedId\n    });\n  }\n\n  public updateCompletedTask(task: {\n    id: any;\n    completed: any;\n  }): Observable<any> {\n    return this.http.post(this.conf.TASK_API + \"update_completed\", {\n      id: task.id,\n      completed: task.completed\n    });\n  }\n\n  listTask(): Observable<any> {\n    return this.http.get(this.conf.TASK_API + 'all_tasks_date');\n  }\n\n  listTaskByEmployee(employee: {\n    firstname: any;\n    lastname: any;\n  }): Observable<any> {\n    return this.http.post(this.conf.TASK_API + 'employee', {\n      firstname: employee.firstname,\n      lastname: employee.lastname\n    });\n  }\n\n  listTaskByCategory(category: {\n    title: any;\n  }): Observable<any> {\n    return this.http.post(this.conf.TASK_API + 'category', {\n      title: category.title\n    });\n  }\n\n  listTaskByTeamlieder(user: {\n    id: any;\n  }): Observable<any> {\n    return this.http.post(this.conf.TASK_API + 'teamlieder', {\n      id: user.id\n    })\n  }\n\n  getTaskById(id: number): Observable<any> {\n    return this.http.get(this.conf.TASK_API + 'id/' + id);\n  }\n\n  deleteTask(id: number): Observable<any> {\n    return this.http.get(this.conf.TASK_API + 'delete/' + id);\n  }\n\n  setCurrentTaskId(id: number): void {\n    this.currentTaskId = id;\n  }\n\n  setTask(task: ITask): void {\n    this.task = task;\n    this.isLoadData = true;\n  }\n\n  getTask(): ITask {\n    return this.task;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {Conf} from \"./Conf\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TokenStorageService {\n  conf:Conf;\n\n  constructor() {\n    this.conf=new Conf();\n  }\n  public saveToken(token: string): void {\n    window.sessionStorage.removeItem(this.conf.TOKEN_KEY);\n    window.sessionStorage.setItem(this.conf.TOKEN_KEY, token);\n  }\n\n  public getToken(): string {\n    return <string>sessionStorage.getItem(this.conf.TOKEN_KEY);\n  }\n\n  public saveUser(user: any): void {\n    window.sessionStorage.removeItem(this.conf.USER_KEY);\n    window.sessionStorage.setItem(this.conf.USER_KEY, JSON.stringify(user));\n  }\n\n  public getUser(): any {\n    return JSON.parse(<string>sessionStorage.getItem(this.conf.USER_KEY));\n  }\n\n  logOut(): void {\n    window.sessionStorage.clear();\n    // window.location.reload();\n  }\n}\n","import {Injectable} from '@angular/core';\r\nimport {HttpClient} from \"@angular/common/http\";\r\nimport {Observable} from \"rxjs\";\r\nimport {IUser, User, UserRoles} from \"../models/User\";\r\nimport {Conf} from \"./Conf\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserService {\r\n  iUser: IUser;\r\n  user: User;\r\n  conf: Conf;\r\n  isAdminRole: boolean;\r\n  isUserRole: boolean;\r\n  isDevRole: boolean;\r\n  isTeamlied_1Role: boolean;\r\n  isTeamlied_2Role: boolean;\r\n  isTeamlied_3Role: boolean;\r\n  isAuth:boolean;\r\n\r\n\r\n  constructor(private http: HttpClient) {\r\n    this.conf = new Conf();\r\n    this.isAdminRole = false;\r\n    this.isUserRole = false;\r\n    this.isDevRole = false;\r\n    this.isTeamlied_1Role = false;\r\n    this.isTeamlied_2Role = false;\r\n    this.isTeamlied_3Role = false;\r\n    this.isAuth=false;\r\n    this.user=new User(0,null,null,null,null,null,null);\r\n  }\r\n\r\n  getRolesCurrentUser() {\r\n    this.getCurrentUser()\r\n      .subscribe(data => {\r\n        this.iUser = data;\r\n        this.setUser(this.iUser);\r\n        this.isAdminRole = this.isAdmin(this.iUser.roles);\r\n        this.isUserRole = this.isUser(this.iUser.roles);\r\n        this.isDevRole = this.isDev(this.iUser.roles);\r\n        this.isTeamlied_1Role = this.isTeamlied_1(this.iUser.roles);\r\n        this.isTeamlied_2Role = this.isTeamlied_2(this.iUser.roles);\r\n        this.isTeamlied_3Role = this.isTeamlied_3(this.iUser.roles);\r\n        this.isAuth=true;\r\n      },error => {\r\n        console.log(\"Error userService.getRolesCurrentUser():\",error.messages);\r\n      });\r\n    console.log(\"userService.getRolesCurrentUser():\",this.iUser);\r\n  }\r\n\r\n  getUser(): IUser {\r\n    return this.iUser;\r\n  }\r\n\r\n  getUserFIO(): string {\r\n    return this.iUser.lastname + \" \" + this.iUser.initial;\r\n  }\r\n\r\n  getUserById(id: number): Observable<any> {\r\n    return this.http.get(this.conf.USER_API + id);\r\n  }\r\n\r\n  getCurrentUser(): Observable<any> {\r\n    return this.http.get(this.conf.AUTH_API);\r\n  }\r\n\r\n  updateUser(user: any): Observable<any> {\r\n    return this.http.post(this.conf.USER_API + 'update', user);\r\n  }\r\n\r\n  setUserId(id: number): void {\r\n    this.user.id = id;\r\n  }\r\n\r\n  setUser(user: IUser): void {\r\n    console.log(\"userService.setUser:\",user);\r\n    this.iUser = user;\r\n    this.user=new User(this.iUser.id,\r\n      this.iUser.email,\r\n      this.iUser.username,\r\n      this.iUser.firstname,\r\n      this.iUser.lastname,\r\n      this.iUser.patronymic,\r\n      this.iUser.initial);\r\n  }\r\n\r\n  isDev(roles: any): boolean {\r\n    if (roles != null)\r\n      return roles.indexOf(\"ROLE_DEV\") > -1;\r\n    else\r\n      return false;\r\n  }\r\n\r\n  isUser(roles: any): boolean {\r\n    if (roles != null)\r\n      return roles.indexOf(\"ROLE_USER\") > -1;\r\n    else\r\n      return false;\r\n  }\r\n\r\n  isTeamlied_1(roles: any): boolean {\r\n    if (roles != null)\r\n      return roles.indexOf(\"ROLE_LEVEL_1\") > -1;\r\n    else\r\n      return false;\r\n  }\r\n\r\n  // TODO убрать после отладки\r\n  isTeamlied_1_test(roles: any, index: number): boolean {\r\n    if (roles != null)\r\n      return roles.indexOf(\"ROLE_LEVEL_1\") > -1;\r\n    else\r\n      return false;\r\n  }\r\n\r\n  isTeamlied_2(roles: any): boolean {\r\n    if (roles != null)\r\n      return roles.indexOf(\"ROLE_LEVEL_2\") > -1;\r\n    else\r\n      return false;\r\n  }\r\n\r\n  isTeamlied_3(roles: any): boolean {\r\n    if (roles != null)\r\n      return roles.indexOf(\"ROLE_LEVEL_3\") > -1;\r\n    else\r\n      return false;\r\n  }\r\n\r\n  isAdmin(roles: any): boolean {\r\n    if (roles != null)\r\n      return roles.indexOf(\"ROLE_ADMIN\") > -1;\r\n    else\r\n      return false;\r\n  }\r\n\r\n  getAll(): Observable<any> {\r\n    return this.http.get(this.conf.USER_API + \"all\");\r\n  }\r\n\r\n  delete(id: number): Observable<any> {\r\n    return this.http.get(this.conf.USER_API + \"delete/\" + id);\r\n  }\r\n\r\n  createUsersRoles(iuser: IUser[]): UserRoles[] {\r\n    let usersRoles: UserRoles[] = [];\r\n    iuser.forEach(item => {\r\n      usersRoles.push(new UserRoles(item.id, item.email, item.username, item.firstname, item.lastname, item.patronymic, item.initial, item.roles));\r\n    })\r\n    return usersRoles;\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\nimport * as moment from \"moment\";\n\n@Pipe({\n  name: 'moment',\n  pure: false\n})\nexport class MomentPipe implements PipeTransform {\n\n  transform(m:moment.Moment, format:string='DD.MM.YYYY'):string{\n    return m.format(format);\n  }\n\n}\n","import {Component, OnInit} from '@angular/core';\r\nimport {TaskService} from \"../../service/task.service\";\r\nimport {UserService} from \"../../service/user.service\";\r\nimport {IUser, User} from \"../../models/User\";\r\nimport {PriorityService} from \"../../service/priority.service\";\r\nimport {IPriority} from \"../../models/Priority\";\r\nimport {EmployeeService} from \"../../service/employee.service\";\r\nimport {IEmployee} from \"../../models/IEmployee\";\r\nimport {CategoryService} from \"../../service/category.service\";\r\nimport {FormBuilder, FormControl, FormGroup, Validators} from \"@angular/forms\";\r\nimport {NotificationService} from \"../../service/notification.service\";\r\nimport {Router} from \"@angular/router\";\r\n\r\n@Component({\r\n  selector: 'app-add-task',\r\n  templateUrl: './add-task.component.html',\r\n  styleUrls: ['./add-task.component.css']\r\n})\r\nexport class AddTaskComponent implements OnInit {\r\n  _taskForm: FormGroup;\r\n\r\n  isUserDataLoaded = false;\r\n  isEmployeesLoaded = false;\r\n  isPriorityLoaded = false;\r\n  isUsersLoaded = false;\r\n  isAdmin = false;\r\n  isUser = false;\r\n  isRolesLoaded = false;\r\n\r\n  user: IUser;\r\n  dateControl: Date;\r\n  newTask: string;\r\n  reference: string;\r\n  employees: IEmployee[];\r\n  priorities: IPriority[];\r\n  users: IUser[];\r\n  note: string;\r\n\r\n  constructor(private taskService: TaskService,\r\n              private employeeService: EmployeeService,\r\n              private priorityService: PriorityService,\r\n              private categoryService: CategoryService,\r\n              private userService: UserService,\r\n              private notificationService: NotificationService,\r\n              private fb: FormBuilder,\r\n              private router: Router\r\n              ) {\r\n    this.userService.getCurrentUser()\r\n      .subscribe(data => {\r\n        this.user = data;\r\n        this.isUserDataLoaded = true;\r\n      });\r\n\r\n    this.employeeService.listEmployee()\r\n      .subscribe(data =>{\r\n        this.employees=data;\r\n        this.isEmployeesLoaded=true;\r\n      });\r\n\r\n    this.priorityService.listPriority()\r\n      .subscribe(data =>{\r\n        this.priorities=data;\r\n        this.isPriorityLoaded=true;\r\n      });\r\n\r\n    this.userService.getAll()\r\n      .subscribe(data=>{\r\n        this.users=data;\r\n        this.isUsersLoaded=true;\r\n      })\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.dateControl=new Date();\r\n    this.newTask=\"Новое мероприятие\";\r\n    this.reference=\"Подробно о мероприятии\";\r\n    this.note=\"Пояснения\"\r\n    this._createTaskFormBuilder();\r\n  }\r\n\r\n  ngOmLoad(): void {\r\n    this.userService.setUser(this.user);\r\n    this.isAdmin = this.userService.isAdmin(this.user.roles);\r\n    this.isUser = this.userService.isUser(this.user.roles);\r\n    this.isRolesLoaded = true;\r\n  }\r\n\r\n  private _createTaskFormBuilder(){\r\n    this._taskForm=this.fb.group({\r\n      newTask: [this.newTask, Validators.required],\r\n      reference: [this.reference, Validators.required],\r\n      teamlied: [this.users],\r\n      employee: [this.employees, Validators.required],\r\n      priority: [this.priorities, Validators.required],\r\n      dateControl: [this.dateControl, Validators.required],\r\n      note: [this.note]\r\n    })\r\n  }\r\n\r\n  submit():void {\r\n\r\n    this.taskService.createTask({\r\n      title: this._taskForm.value.newTask,\r\n      reference:this._taskForm.value.reference,\r\n      employeeId: this._taskForm.value.employee,\r\n      priorityId: this._taskForm.value.priority,\r\n      categoryId: 1,\r\n      dateControl: this._taskForm.value.dateControl,\r\n      note:this._taskForm.value.note\r\n    }).subscribe(data=>{\r\n      this.notificationService.showSnackBar('Данные были успешно записаны');\r\n      this.router.navigate(['tasks']);\r\n      // window.location.reload();\r\n    },error => {\r\n      this.notificationService.showSnackBar(error.message);\r\n    });\r\n  }\r\n\r\n  submitExtend():void {\r\n\r\n    this.taskService.createTaskExtend({\r\n      title: this._taskForm.value.newTask,\r\n      reference:this._taskForm.value.reference,\r\n      employeeId: this._taskForm.value.employee,\r\n      priorityId: this._taskForm.value.priority,\r\n      categoryId: 1,\r\n      dateControl: this._taskForm.value.dateControl,\r\n      note:this.note,\r\n      teamliedId:this._taskForm.value.teamlied\r\n    }).subscribe(data=>{\r\n      this.notificationService.showSnackBar('Данные были успешно записаны');\r\n      this.router.navigate(['tasks']);\r\n      // window.location.reload();\r\n    },error => {\r\n      this.notificationService.showSnackBar(error.message);\r\n    });\r\n  }\r\n\r\n}\r\n","<div *ngIf=\"!isRolesLoaded\">\r\n  <button mat-button [disabled]=\"!isUserDataLoaded\" (click)=\"ngOmLoad()\">\r\n    Режим администратора\r\n  </button>\r\n</div>\r\n\r\n<div *ngIf=\"isUserDataLoaded\" class=\"task-form\">\r\n  <hi>Новая задача</hi>\r\n  <div *ngIf=\"isAdmin\">\r\n    <p>Работа в режиме Администратора системы, руководитель работ выбирается Администратором </p>\r\n  </div>\r\n  <div *ngIf=\"!isAdmin\">\r\n    <h2>Руководитель(инициатор): {{user.lastname}}&nbsp;{{user.initial}}</h2>\r\n  </div>\r\n  <form [formGroup]=\"_taskForm\" >\r\n    <mat-form-field class=\"task-full-width\" appearance=\"fill\">\r\n      <mat-label>Наименование мероприятия:</mat-label>\r\n      <input matInput #newTask formControlName=\"newTask\" type=\"text\" maxlength=\"256\">\r\n      <mat-hint align=\"start\"><strong>Наименование ограничено по вводу символов</strong> </mat-hint>\r\n      <mat-hint align=\"end\">{{newTask.value.length}} / 256</mat-hint>\r\n      <button *ngIf=\"newTask.value\" matSuffix mat-icon-button aria-label=\"Clear\" (click)=\"newTask.value=''\">\r\n        <mat-icon>close</mat-icon>\r\n      </button>\r\n    </mat-form-field>\r\n\r\n    <mat-form-field class=\"task-note\" appearance=\"fill\">\r\n      <mat-label>Подробнее о мероприятии:</mat-label>\r\n      <textarea matInput #reference formControlName=\"reference\"></textarea>\r\n      <button *ngIf=\"reference.value\" matSuffix mat-icon-button aria-label=\"Clear\" (click)=\"reference.value=''\">\r\n        <mat-icon>close</mat-icon>\r\n      </button>\r\n    </mat-form-field>\r\n\r\n    <mat-form-field class=\"task-note\" appearance=\"fill\">\r\n      <mat-label>Примечание:</mat-label>\r\n      <textarea matInput #note formControlName=\"note\"></textarea>\r\n      <button *ngIf=\"note.value\" matSuffix mat-icon-button aria-label=\"Clear\" (click)=\"note.value=''\">\r\n        <mat-icon>close</mat-icon>\r\n      </button>\r\n    </mat-form-field>\r\n\r\n    <div *ngIf=\"isAdmin\">\r\n      <h5>Укажите руководителя</h5>\r\n      <mat-form-field>\r\n        <mat-label>Руководитель</mat-label>\r\n        <mat-select formControlName=\"teamlied\" disabled={{!isUsersLoaded}}>\r\n          <mat-option  *ngFor=\"let teamlied of users\" [value]=\"teamlied.id\" >\r\n            {{teamlied.fio}}\r\n          </mat-option>\r\n        </mat-select>\r\n      </mat-form-field>\r\n    </div>\r\n\r\n    <h5>Укажите исполнителя</h5>\r\n    <mat-form-field>\r\n      <mat-label>Исполнители</mat-label>\r\n      <mat-select formControlName=\"employee\" disabled={{!isEmployeesLoaded}}>\r\n        <mat-option  *ngFor=\"let employee of employees\" [value]=\"employee.id\" >\r\n          {{employee.fio}}\r\n        </mat-option>\r\n      </mat-select>\r\n    </mat-form-field>\r\n\r\n    <h5>Укажите приоритет исполнения</h5>\r\n    <mat-form-field>\r\n      <mat-label>Приоритет</mat-label>\r\n      <mat-select formControlName=\"priority\" disabled={{!isPriorityLoaded}}>\r\n        <mat-option  *ngFor=\"let priority of priorities\" [value]=\"priority.id\">\r\n          {{priority.title}}\r\n        </mat-option>\r\n      </mat-select>\r\n    </mat-form-field>\r\n\r\n    <h5>Задайте контрольную дату</h5>\r\n    <mat-form-field appearance=\"fill\">\r\n      <mat-label>Дата исполнения</mat-label>\r\n      <input matInput [matDatepicker]=\"dateControl\" formControlName=\"dateControl\" value=\"dateControl|async|moment\">\r\n      <mat-datepicker-toggle matSuffix [for]=\"dateControl\"></mat-datepicker-toggle>\r\n      <mat-datepicker #dateControl></mat-datepicker>\r\n    </mat-form-field>\r\n    <br>\r\n    <div *ngIf=\"!isAdmin\" class=\"mat-button\">\r\n      <button mat-button [disabled]=\"_taskForm.invalid\" (click)=\"submit()\">\r\n        Сохранить\r\n      </button>\r\n    </div>\r\n    <div *ngIf=\"isAdmin\" class=\"mat-button\">\r\n      <button mat-button [disabled]=\"_taskForm.invalid\" (click)=\"submitExtend()\">\r\n        Сохранить\r\n      </button>\r\n    </div>\r\n  </form>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {MatDialog, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material/dialog';\r\nimport {DialogComponent} from \"../dialog/dialog.component\";\r\n\r\n@Component({\r\n  selector: 'app-delete-task',\r\n  templateUrl: './delete-task.component.html',\r\n  styleUrls: ['./delete-task.component.css']\r\n})\r\n\r\nexport class DeleteTaskComponent implements OnInit {\r\n  action: string;\r\n  title: string;\r\n\r\n  constructor(public dialog: MatDialog) {\r\n  }\r\n\r\n  openDialog(): void {\r\n    const dialogRef = this.dialog.open(DialogComponent, {\r\n      width: '250px',\r\n      data: {title: this.title, action: this.action},\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      this.action = result;\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n}\r\n","<ol>\n  <li>\n    <mat-form-field appearance=\"fill\">\n      <mat-label>What's your name?</mat-label>\n      <input matInput [(ngModel)]=\"title\">\n    </mat-form-field>\n  </li>\n  <li>\n    <button mat-raised-button (click)=\"openDialog()\">Pick one</button>\n  </li>\n  <li *ngIf=\"action\">\n    You chose: <i>{{action}}</i>\n  </li>\n</ol>\n","import {Component, Inject, OnInit} from '@angular/core';\nimport {MAT_DIALOG_DATA, MatDialogRef} from \"@angular/material/dialog\";\nimport {DialogData} from \"../../models/dialog-data\";\n\n@Component({\n  selector: 'app-dialog',\n  templateUrl: './dialog.component.html',\n  styleUrls: ['./dialog.component.css']\n})\n\nexport class DialogComponent{\n  constructor(\n    public dialogRef: MatDialogRef<DialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: DialogData){\n\n  }\n\n}\n","<h2 mat-dialog-title>Удалить?</h2>\n<h3>{{data.title}}</h3>\n<mat-dialog-actions align=\"end\">\n  <button mat-button mat-dialog-close>Cancel</button>\n  <button mat-button [mat-dialog-close]=\"true\" cdkFocusInitial>Ok</button>\n</mat-dialog-actions>\n\n","import {Component, OnInit} from '@angular/core';\r\nimport {FormBuilder, FormGroup, Validators} from \"@angular/forms\";\r\nimport {IUser} from \"../../models/User\";\r\nimport {TaskService} from \"../../service/task.service\";\r\nimport {UserService} from \"../../service/user.service\";\r\nimport {NotificationService} from \"../../service/notification.service\";\r\nimport {Router} from \"@angular/router\";\r\nimport {IEmployee} from \"../../models/IEmployee\";\r\nimport {IPriority} from \"../../models/Priority\";\r\nimport {EmployeeService} from \"../../service/employee.service\";\r\nimport {PriorityService} from \"../../service/priority.service\";\r\nimport {CategoryService} from \"../../service/category.service\";\r\nimport {ICategory} from \"../../models/ICategory\";\r\n\r\n@Component({\r\n  selector: 'edit-task',\r\n  templateUrl: './edit-task.component.html',\r\n  styleUrls: ['./edit-task.component.css']\r\n})\r\n\r\nexport class EditTaskComponent implements OnInit {\r\n  _taskEditForm: FormGroup;\r\n  isUserDataLoaded = false;\r\n  isTaskDataLoaded = false;\r\n  isEmployeesLoaded = false;\r\n  isPriorityLoaded = false;\r\n  isCategoryLoaded = false;\r\n  isUsersLoaded = false;\r\n\r\n  isLogs = false;\r\n\r\n  isAdmin = false;\r\n  isUser = false;\r\n  isRolesLoaded = false;\r\n\r\n  user: IUser;\r\n  users: IUser[];\r\n  title: string;\r\n  reference: string;\r\n  note: string;\r\n  dateControl: Date;\r\n  employees: IEmployee[];\r\n  priorities: IPriority[];\r\n  categories: ICategory[];\r\n  logs: Object;\r\n\r\n  constructor(private taskService: TaskService,\r\n              private employeeService: EmployeeService,\r\n              private priorityService: PriorityService,\r\n              private categoryService: CategoryService,\r\n              private userService: UserService,\r\n              private notificationService: NotificationService,\r\n              private fb: FormBuilder,\r\n              private router: Router) {\r\n    this.title = \"\";\r\n    this.note = \"\";\r\n    this.userService.getCurrentUser()\r\n      .subscribe(data => {\r\n        this.user = data;\r\n        this.isUserDataLoaded = true;\r\n      });\r\n\r\n    this.employeeService.listEmployee()\r\n      .subscribe(data => {\r\n        this.employees = data;\r\n        this.isEmployeesLoaded = true;\r\n      });\r\n\r\n    this.priorityService.listPriority()\r\n      .subscribe(data => {\r\n        this.priorities = data;\r\n        this.isPriorityLoaded = true;\r\n      });\r\n\r\n    this.categoryService.listCategory()\r\n      .subscribe(data=>{\r\n        this.categories=data;\r\n        this.isCategoryLoaded=true;\r\n      });\r\n\r\n    this.userService.getAll()\r\n      .subscribe(data => {\r\n        this.users = data;\r\n        this.isUsersLoaded = true;\r\n      })\r\n  }\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.logs = \"Loggin back-enf request...\"\r\n  }\r\n\r\n  ngOmLoad(): void {\r\n    this.userService.setUser(this.user);\r\n    this.isAdmin = this.userService.isAdmin(this.user.roles);\r\n    this.isUser = this.userService.isUser(this.user.roles);\r\n    this.isRolesLoaded = true;\r\n    this._editTaskFormBuilder();\r\n  }\r\n\r\n  _editTaskFormBuilder() {\r\n    this._taskEditForm = this.fb.group({\r\n      title: [this.taskService.task.title, Validators.required],\r\n      reference: [this.taskService.task.reference, Validators.required],\r\n      employeeFio: [this.taskService.task.employee.fio],\r\n      employee: [this.employees, Validators.required],\r\n      priority: [this.priorities, Validators.required],\r\n      category: [this.categories, Validators.required],\r\n      dateControl: [this.taskService.task.dateControl, Validators.required],\r\n      strDateControl: [this.taskService.task.strDateControl],\r\n      note: [this.taskService.task.note],\r\n      teamlied: [this.users]\r\n    });\r\n    this.isTaskDataLoaded = this.taskService.isLoadData;\r\n  }\r\n\r\n  submit(isAdmin:boolean): void {\r\n    this.logs = this._taskEditForm.value;\r\n    if (isAdmin){\r\n      this.taskService.updateTeamliedTask({\r\n        id: this.taskService.task.id,\r\n        title: this._taskEditForm.value.title,\r\n        reference: this._taskEditForm.value.reference,\r\n        employeeId: this._taskEditForm.value.employee,\r\n        priorityId: this._taskEditForm.value.priority,\r\n        categoryId: this._taskEditForm.value.category,\r\n        dateControl: this._taskEditForm.value.dateControl,\r\n        note: this._taskEditForm.value.note,\r\n        completed: this.taskService.task.completed,\r\n        teamliedId:this._taskEditForm.value.teamlied\r\n      }).subscribe(data => {\r\n        this.notificationService.showSnackBar('Данные обновлены успешно');\r\n        window.location.reload();\r\n      }, error => {\r\n        this.notificationService.showSnackBar(error.message);\r\n      });\r\n\r\n    }\r\n    else {\r\n      this.taskService.updateTask({\r\n        id: this.taskService.task.id,\r\n        title: this._taskEditForm.value.title,\r\n        reference: this._taskEditForm.value.reference,\r\n        employeeId: this._taskEditForm.value.employee,\r\n        priorityId: this._taskEditForm.value.priority,\r\n        categoryId: this._taskEditForm.value.categoryId,\r\n        dateControl: this._taskEditForm.value.dateControl,\r\n        note: this._taskEditForm.value.note,\r\n        completed: this.taskService.task.completed\r\n      }).subscribe(data => {\r\n        this.notificationService.showSnackBar('Данные обновлены успешно');\r\n        window.location.reload();\r\n      }, error => {\r\n        this.notificationService.showSnackBar(error.message);\r\n      });\r\n    }\r\n  }\r\n\r\n}\r\n","<h1>Редактирование задачи</h1>\n<div *ngIf=\"isTaskDataLoaded\">\n  <p>{{taskService.task.title}}</p>\n</div>\n<h2>Инициатор: {{user.lastname}}&nbsp;{{user.initial}}</h2>\n<div class=\"mat-button\">\n  <button mat-button [disabled]=\"isTaskDataLoaded\" (click)=\"ngOmLoad()\">\n    Редактировать\n  </button>\n</div>\n<div *ngIf=\"isTaskDataLoaded\" class=\"task-form\">\n  <form [formGroup]=\"_taskEditForm\">\n    <mat-form-field class=\"task-full-width\" appearance=\"fill\">\n      <mat-label>Наименование мероприятия:</mat-label>\n      <input matInput #message formControlName=\"title\" type=\"text\" maxlength=\"256\">\n      <mat-hint align=\"start\"><strong>Наименование ограничено по вводу символов</strong></mat-hint>\n      <mat-hint align=\"end\">{{message.value.length}} / 256</mat-hint>\n      <button *ngIf=\"title\" matSuffix mat-icon-button aria-label=\"Clear\" (click)=\"title=''\">\n        <mat-icon>close</mat-icon>\n      </button>\n    </mat-form-field>\n\n    <mat-form-field class=\"task-note\" appearance=\"fill\">\n      <mat-label>Содержание работ:</mat-label>\n      <textarea matInput formControlName=\"reference\"></textarea>\n    </mat-form-field>\n\n    <mat-form-field class=\"task-note\" appearance=\"fill\">\n      <mat-label>Примечание:</mat-label>\n      <textarea matInput formControlName=\"note\"></textarea>\n    </mat-form-field>\n\n    <div *ngIf=\"isAdmin\">\n      <h5>Укажите руководителя</h5>\n      <mat-form-field>\n        <mat-label>Руководитель</mat-label>\n        <mat-select formControlName=\"teamlied\" disabled={{!isUsersLoaded}}>\n          <mat-option  *ngFor=\"let teamlied of users\" [value]=\"teamlied.id\" >\n            {{teamlied.fio}}\n          </mat-option>\n        </mat-select>\n      </mat-form-field>\n    </div>\n\n    <div *ngIf=\"isCategoryLoaded\">\n    <h5>Отдел:{{taskService.task.category.title}}</h5>\n    <mat-form-field>\n      <mat-label>Новый отдел</mat-label>\n      <mat-select formControlName=\"category\">\n        <mat-option *ngFor=\"let category of categories\" [value]=\"category.id\">\n          {{category.title}}\n        </mat-option>\n      </mat-select>\n    </mat-form-field>\n    </div>\n\n    <div *ngIf=\"isEmployeesLoaded\">\n    <h5>Исполнители:{{taskService.task.employee.fio}}</h5>\n    <mat-form-field>\n      <mat-label>Новый исполнитель</mat-label>\n      <mat-select formControlName=\"employee\">\n        <mat-option *ngFor=\"let employee of employees\" [value]=\"employee.id\">\n          {{employee.fio}}\n        </mat-option>\n      </mat-select>\n    </mat-form-field>\n    </div>\n\n    <div *ngIf=\"isPriorityLoaded\">\n    <h5>Приоритет:{{taskService.task.priority.title}}</h5>\n    <mat-form-field>\n      <mat-label>Приоритет</mat-label>\n      <mat-select formControlName=\"priority\" disabled={{!isPriorityLoaded}}>\n        <mat-option *ngFor=\"let priority of priorities\" [value]=\"priority.id\">\n          {{priority.title}}\n        </mat-option>\n      </mat-select>\n    </mat-form-field>\n    </div>\n\n    <h5>Задайте контрольную дату</h5>\n    <mat-form-field appearance=\"fill\">\n      <mat-label>Дата исполнения</mat-label>\n      <input matInput [matDatepicker]=\"dateControl\" formControlName=\"dateControl\">\n      <mat-datepicker-toggle matSuffix [for]=\"dateControl\"></mat-datepicker-toggle>\n      <mat-datepicker #dateControl></mat-datepicker>\n    </mat-form-field>\n    <br>\n    <div class=\"mat-button\">\n      <button mat-button [disabled]=\"_taskEditForm.invalid\" (click)=\"submit(isAdmin)\">\n        Сохранить\n      </button>\n    </div>\n  </form>\n</div>\n<div class=\"logging\" *ngIf=\"isLogs\">\n  <h5>Logs:</h5>\n  <p>{{logs|json}}</p>\n</div>\n","import {Component, OnDestroy, OnInit} from '@angular/core';\r\nimport {ITask} from \"../../models/Task\";\r\nimport {TaskService} from \"../../service/task.service\";\r\nimport {UserService} from \"../../service/user.service\";\r\nimport {IUser, User} from \"../../models/User\";\r\nimport {PriorityService} from \"../../service/priority.service\";\r\nimport {EmployeeService} from \"../../service/employee.service\";\r\nimport {DialogComponent} from \"../dialog/dialog.component\";\r\nimport {MatDialog} from \"@angular/material/dialog\";\r\nimport {NotificationService} from \"../../service/notification.service\";\r\nimport {Router} from \"@angular/router\";\r\nimport * as XLSX from \"xlsx\";\r\nimport {DateService} from \"../../service/date.service\";\r\nimport {States} from \"../../models/RouteTask\";\r\nimport {Employee, IEmployee} from \"../../models/IEmployee\";\r\nimport {Category, ICategory} from \"../../models/ICategory\";\r\nimport {IPriority} from \"../../models/Priority\";\r\nimport {CategoryService} from \"../../service/category.service\";\r\n\r\n@Component({\r\n  selector: 'list-task',\r\n  templateUrl: './list-task.component.html',\r\n  styleUrls: ['./list-task.component.css']\r\n})\r\nexport class ListTaskComponent implements OnInit{\r\n  isTaskLoaded = false;\r\n  isUserDataLoaded = false;\r\n  isAdmin = false;\r\n  isUser = false;\r\n  isRolesLoaded = false;\r\n  isEmployeesLoaded = false;\r\n  isPriorityLoaded = false;\r\n  isCategoryLoaded = false;\r\n  isUsersLoaded = false;\r\n\r\n\r\n  public task: ITask;\r\n  tasks: ITask[];\r\n  user: IUser;\r\n  action: string;\r\n  deleteIdTask: number;\r\n  indexTask: number;\r\n  fileNameExcel: string;\r\n  states: States;\r\n  employee: Employee;\r\n  category: Category;\r\n  categoryTitle: string;\r\n  employees: IEmployee[];\r\n  priorities: IPriority[];\r\n  categories: ICategory[];\r\n  users: IUser[];\r\n  teamlied: User;\r\n  teamliederId: number;\r\n\r\n  constructor(public dateService: DateService,\r\n              private taskService: TaskService,\r\n              private employeeService: EmployeeService,\r\n              private priorityService: PriorityService,\r\n              private categoryService: CategoryService,\r\n              private userService: UserService,\r\n              private notificationService: NotificationService,\r\n              private router: Router,\r\n              public dialog: MatDialog) {\r\n    this.states = new States();\r\n  }\r\n\r\n\r\n  ngOnInit(): void {\r\n    this.userService.getCurrentUser()\r\n      .subscribe(data => {\r\n        this.user = data;\r\n        this.isUserDataLoaded = true;\r\n      })\r\n    // this.userService.setUser(this.user);\r\n    // this.isAdmin=this.userService.isAdmin(this.user.roles);\r\n    this.fileNameExcel = \"Plan.xlsx\";\r\n\r\n    this.employeeService.listEmployee()\r\n      .subscribe(data => {\r\n        this.employees = data;\r\n        this.isEmployeesLoaded = true;\r\n      });\r\n\r\n    this.priorityService.listPriority()\r\n      .subscribe(data => {\r\n        this.priorities = data;\r\n        this.isPriorityLoaded = true;\r\n      });\r\n\r\n    this.userService.getAll()\r\n      .subscribe(data => {\r\n        this.users = data;\r\n        this.isUsersLoaded = true;\r\n      });\r\n    this.getCategory();\r\n  }\r\n\r\n  loadAllTask(): void {\r\n    this.taskService.listTask()\r\n      .subscribe(data => {\r\n      this.tasks = data;\r\n      this.isTaskLoaded = true;\r\n    });\r\n\r\n  }\r\n\r\n  loadAllTaskByEmployee(): void {\r\n    this.employee = new Employee(this.user.firstname, this.user.lastname);\r\n    this.taskService.listTaskByEmployee(this.employee)\r\n      .subscribe(data => {\r\n        this.tasks = data;\r\n        this.isTaskLoaded = true;\r\n      },error => {\r\n        this.isTaskLoaded=false;\r\n      });\r\n  }\r\n\r\n  getCategory(): void {\r\n    this.categoryService.listCategory()\r\n      .subscribe(data => {\r\n        this.categories = data;\r\n        this.isCategoryLoaded = true;\r\n      },error => {\r\n        this.isCategoryLoaded=false;\r\n      });\r\n\r\n  }\r\n\r\n  changeCategorySelect(event: any) {\r\n    this.loadAllTaskByCategory();\r\n  }\r\n\r\n  changeUserSelect(event: any) {\r\n    this.loadAllTaskByTeamlieder();\r\n  }\r\n\r\n  loadAllTaskByCategory(): void {\r\n    this.category = new Category(this.categoryTitle);\r\n    this.category.title = this.categoryTitle\r\n    this.taskService.listTaskByCategory(this.category)\r\n      .subscribe(data => {\r\n        this.tasks = data;\r\n        this.isTaskLoaded = true;\r\n      }, error => {\r\n        this.isTaskLoaded = false;\r\n      });\r\n  }\r\n\r\n  loadAllTaskByTeamlieder(): void {\r\n    this.teamlied = new User(this.teamliederId, \"\", \"\", \"\", \"\", \"\", \"\");\r\n    this.taskService.listTaskByTeamlieder(this.teamlied)\r\n      .subscribe(data => {\r\n        this.tasks = data;\r\n        this.isTaskLoaded = true;\r\n      }, error => {\r\n        this.isTaskLoaded = false;\r\n      });\r\n  }\r\n\r\n  // TODO реализовать отображение pdf\r\n  /** метод реализующий возвращение формата картинки */\r\n  formatImage(img: any): any {\r\n    if (img == null) {\r\n      return null;\r\n    }\r\n    return 'data:image/jpeg;base64,' + img;\r\n  }\r\n\r\n  setCurrentTask(index: number, id: number): void {\r\n    this.task = this.tasks[index];\r\n    this.taskService.setTask(this.task);\r\n    if (this.user.fio == this.taskService.task.employee.fio ||\r\n      this.user.fio == this.taskService.task.teamlieder ||\r\n      this.userService.isAdmin(this.user.roles))\r\n      this.router.navigate(['app-send-task']);\r\n    else\r\n      this.notificationService.showSnackBar(\"Направить на согласование может только Исполнитель задачи\");\r\n  }\r\n\r\n  setCurrentDocs(index: number, id: number): void {\r\n    this.task = this.tasks[index];\r\n    this.taskService.setTask(this.task);\r\n    if (this.user.fio == this.taskService.task.employee.fio ||\r\n      this.user.fio == this.taskService.task.teamlieder ||\r\n      this.userService.isAdmin(this.user.roles))\r\n      this.router.navigate(['app-list-documents']);\r\n    else\r\n      this.notificationService.showSnackBar(\"Просматривать вложенные документы может только Исполнитель, или Руководитель задачи\");\r\n  }\r\n\r\n  editTask(index: number, id: number): void {\r\n    this.task = this.tasks[index];\r\n    this.taskService.setTask(this.task);\r\n    this.router.navigate(['edit-task']);\r\n  }\r\n\r\n  openDialog(index: number, id: number): void {\r\n    this.indexTask = index;\r\n    this.deleteIdTask = id;\r\n    const dialogRef = this.dialog.open(DialogComponent, {\r\n      width: '450px',\r\n      data: {title: this.tasks[index].title, action: this.action},\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      this.action = result;\r\n      if (this.action) {\r\n        this.taskService.deleteTask(this.deleteIdTask)\r\n          .subscribe(data => {\r\n            this.notificationService.showSnackBar('Данные были успешно удалены');\r\n            window.location.reload();\r\n          }), error => {\r\n          this.notificationService.showSnackBar(error.message);\r\n        }\r\n        console.log(this.tasks[index].title + 'was deleted');\r\n      } else\r\n        console.log('Task not delete');\r\n    });\r\n  }\r\n\r\n  ngOmLoad(): void {\r\n    this.userService.setUser(this.user);\r\n    this.isAdmin = this.userService.isAdmin(this.user.roles);\r\n    if (!this.isAdmin)\r\n      this.notificationService.showSnackBar(\"У Вас отсутствует роль системного администратора\");\r\n    else\r\n      this.notificationService.showSnackBar(\"Права системного администратора предоставлены\");\r\n    this.isUser = this.userService.isUser(this.user.roles);\r\n    this.isRolesLoaded = true;\r\n  }\r\n\r\n  exportexcel(): void {\r\n    /* pass here the table id */\r\n    let element = document.getElementById('list-table');\r\n    const ws: XLSX.WorkSheet = XLSX.utils.table_to_sheet(element);\r\n\r\n    /* generate workbook and add the worksheet */\r\n    const wb: XLSX.WorkBook = XLSX.utils.book_new();\r\n    XLSX.utils.book_append_sheet(wb, ws, 'task');\r\n\r\n    /* save to file */\r\n    XLSX.writeFile(wb, this.fileNameExcel);\r\n  }\r\n\r\n  getState(id: number): string {\r\n    let title = '';\r\n    this.states.states.forEach(state => {\r\n      if (state.id == id)\r\n        title = state.title;\r\n      return title;\r\n    })\r\n    return title;\r\n  }\r\n\r\n  setColor(day: number, date: any): any {\r\n    var current = new Date();\r\n    var control = new Date(date);\r\n    var delta = control.getTime() - current.getTime();\r\n    var deltaDay = Math.floor(delta / 1000 / 60 / 60 / 24);\r\n    var color = (deltaDay > day) ? \"black\" : \"red\";\r\n    // console.log(\"Alert:\",color);\r\n    return color;\r\n  }\r\n}\r\n","<body>\r\n<header>\r\n  <h2>Оперативный план работ на {{dateService.date | async | moment}}</h2>\r\n  <div *ngIf=\"!isRolesLoaded\">\r\n    <button mat-button [disabled]=\"!isUserDataLoaded\" (click)=\"ngOmLoad()\">\r\n      Режим администратора\r\n    </button>\r\n  </div>\r\n  <div *ngIf=\"isAdmin\">\r\n    <p>Работа в режиме Администратора системы </p>\r\n    <button class=\"btn btn-warning\" (click)=\"exportexcel()\">Export to Excel</button>\r\n  </div>\r\n</header>\r\n<div class=\"filter\">\r\n  <h4>Определите требуемый фильтр для просмотра:</h4>\r\n  <table class=\"table table-bordered\">\r\n    <thead>\r\n    <tr>\r\n      <th>Задачи</th>\r\n      <th>Исполнение</th>\r\n      <th>Подразделение</th>\r\n      <th>Руководитель</th>\r\n    </tr>\r\n    </thead>\r\n    <tbody>\r\n    <tr>\r\n      <td>\r\n        <button mat-button (click)=\"loadAllTask()\">\r\n          Все задачи\r\n        </button>\r\n      </td>\r\n      <td>\r\n        <button mat-button (click)=\"loadAllTaskByEmployee()\">\r\n          Только мне на исполнение\r\n        </button>\r\n      </td>\r\n      <td>\r\n        <mat-form-field *ngIf=\"isCategoryLoaded\" appearance=\"fill\">\r\n          <mat-select (selectionChange)=\"changeCategorySelect($event)\" [(value)]=\"categoryTitle\">\r\n            <mat-option *ngFor=\"let category of categories\" [value]=\"category.title\">\r\n              {{category.title}}\r\n            </mat-option>\r\n          </mat-select>\r\n        </mat-form-field>\r\n      </td>\r\n      <td>\r\n        <mat-form-field *ngIf=\"isUsersLoaded\" appearance=\"fill\">\r\n          <mat-select (selectionChange)=\"changeUserSelect($event)\" [(value)]=\"teamliederId\">\r\n            <mat-option *ngFor=\"let teamlieder of users\" [value]=\"teamlieder.id\">\r\n              {{teamlieder.fio}}\r\n            </mat-option>\r\n          </mat-select>\r\n        </mat-form-field>\r\n      </td>\r\n    </tr>\r\n    </tbody>\r\n  </table>\r\n</div>\r\n<div *ngIf=\"isTaskLoaded && isUserDataLoaded\">\r\n  <div class=\"table-wrapper content\">\r\n    <table id=\"list-table\" class=\"table table-hover table-bordered\">\r\n      <thead>\r\n      <tr>\r\n        <th scope=\"col\" width=\"3%\">N</th>\r\n        <th scope=\"col\" width=\"10%\">Наименование работ</th>\r\n        <th scope=\"col\" width=\"20%\">Содержание работ</th>\r\n        <th scope=\"col\" width=\"20%\">Примечание</th>\r\n        <th scope=\"col\" width=\"8%\">Ответственное подразделение</th>\r\n        <th scope=\"col\" width=\"8%\">Ответственный исполнитель</th>\r\n        <th scope=\"col\" width=\"8%\">Срок исполнения</th>\r\n        <th scope=\"col\" width=\"8%\">Руководитель</th>\r\n        <th *ngIf=\"isAdmin\" scope=\"col\" width=\"5%\">Редактирование</th>\r\n        <th scope=\"col\" width=\"5%\">Исполнение</th>\r\n        <th scope=\"col\" width=\"5%\">Статус</th>\r\n        <th scope=\"col\" width=\"5%\">Вложения</th>\r\n        <th *ngIf=\"isAdmin\" scope=\"col\" width=\"5%\">Удаление</th>\r\n      </tr>\r\n      </thead>\r\n      <tbody>\r\n      <tr class=\"{{task.priority.color}}\" *ngFor=\"let task of tasks; let i = index\">\r\n        <th scope=\"row\" width=\"3%\" class=\"{{setColor(task.priority.countDay,task.dateControl)}}\">{{i + 1}}</th>\r\n        <td width=\"10%\" class=\"{{setColor(task.priority.countDay,task.dateControl)}}\">{{task.title}}</td>\r\n        <td width=\"20%\">{{task.reference}}</td>\r\n        <td width=\"20%\">{{task.note}}</td>\r\n        <td width=\"8%\">{{task.category.title}}</td>\r\n        <td width=\"8%\">{{task.employee.fio}}</td>\r\n        <td width=\"8%\">{{task.strDateControl}}</td>\r\n        <td width=\"8%\">{{task.teamlieder}}</td>\r\n        <td class=\"info\" *ngIf=\"isAdmin\" width=\"5%\"><a class=\"btn btn-warning\" (click)=\"editTask(i,task.id)\">Редактировать</a>\r\n        </td>\r\n        <td class=\"info\" width=\"5%\"><a class=\"btn btn-warning\" (click)=\"setCurrentTask(i,task.id)\"\r\n                                       title=\"Просмотр задачи, отправка на согласование\">Отправить</a></td>\r\n        <td width=\"8%\">{{getState(task.completed)}}</td>\r\n        <td class=\"info\" width=\"5%\"><a class=\"btn btn-warning\" (click)=\"setCurrentDocs(i,task.id)\"\r\n                                       title=\"Вложенные документы\">Вложения</a></td>\r\n        <td class=\"info\" *ngIf=\"isAdmin\" width=\"5%\"><a class=\"btn btn-warning\"\r\n                                                       (click)=\"openDialog(i, task.id)\">Удалить</a></td>\r\n      </tr>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n</div>\r\n</body>\r\n","import {Component, OnInit} from '@angular/core';\r\nimport {IUser} from \"../../models/User\";\r\nimport {TaskService} from \"../../service/task.service\";\r\nimport {UserService} from \"../../service/user.service\";\r\nimport {Router} from \"@angular/router\";\r\nimport {IDocumentModel} from \"../../models/DocumentModel\";\r\n\r\n@Component({\r\n  selector: 'app-send-task',\r\n  templateUrl: './send-task.component.html',\r\n  styleUrls: ['./send-task.component.css']\r\n})\r\nexport class SendTaskComponent implements OnInit {\r\n  user: IUser;\r\n  isUserDataLoaded = false;\r\n  documents: IDocumentModel[];\r\n  previewImgURL:any;\r\n  typePreview:string[];\r\n  isPreview:boolean;\r\n\r\n  constructor(public taskService: TaskService,\r\n              private userService: UserService,\r\n              private router: Router) {\r\n    this.userService.getCurrentUser()\r\n      .subscribe(data => {\r\n        this.user = data;\r\n        this.isUserDataLoaded = true;\r\n      });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  listDocs(){\r\n    this.router.navigate(['app-list-documents']);\r\n  }\r\n\r\n  sendTask(): void {\r\n    this.userService.setUser(this.user);\r\n    this.router.navigate(['app-add-route']);\r\n  }\r\n}\r\n","<div *ngIf=\"taskService.isLoadData\" class=\"button_row\">\r\n  <h1>Отправка задачи на согласование</h1>\r\n  <h2>Мероприятие:{{taskService.task.title}}</h2>\r\n  <h2>Подробно:{{taskService.task.reference}}</h2>\r\n  <h2>Примечание:{{taskService.task.note}}</h2>\r\n  <h1>Вложения:</h1>\r\n  <button mat-flat-button color=\"primary\" (click)=\"listDocs()\">Показать/Обновить</button>\r\n  <button mat-flat-button color=\"primary\" (click)=\"sendTask()\" >Направить на согласование</button>\r\n  <app-list-documents></app-list-documents>\r\n</div>\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","var map = {\n\t\"./af\": 8685,\n\t\"./af.js\": 8685,\n\t\"./ar\": 254,\n\t\"./ar-dz\": 4312,\n\t\"./ar-dz.js\": 4312,\n\t\"./ar-kw\": 2614,\n\t\"./ar-kw.js\": 2614,\n\t\"./ar-ly\": 8630,\n\t\"./ar-ly.js\": 8630,\n\t\"./ar-ma\": 8674,\n\t\"./ar-ma.js\": 8674,\n\t\"./ar-sa\": 9032,\n\t\"./ar-sa.js\": 9032,\n\t\"./ar-tn\": 4730,\n\t\"./ar-tn.js\": 4730,\n\t\"./ar.js\": 254,\n\t\"./az\": 3052,\n\t\"./az.js\": 3052,\n\t\"./be\": 150,\n\t\"./be.js\": 150,\n\t\"./bg\": 3069,\n\t\"./bg.js\": 3069,\n\t\"./bm\": 3466,\n\t\"./bm.js\": 3466,\n\t\"./bn\": 8516,\n\t\"./bn-bd\": 557,\n\t\"./bn-bd.js\": 557,\n\t\"./bn.js\": 8516,\n\t\"./bo\": 6273,\n\t\"./bo.js\": 6273,\n\t\"./br\": 9588,\n\t\"./br.js\": 9588,\n\t\"./bs\": 9815,\n\t\"./bs.js\": 9815,\n\t\"./ca\": 3331,\n\t\"./ca.js\": 3331,\n\t\"./cs\": 1320,\n\t\"./cs.js\": 1320,\n\t\"./cv\": 2219,\n\t\"./cv.js\": 2219,\n\t\"./cy\": 8266,\n\t\"./cy.js\": 8266,\n\t\"./da\": 6427,\n\t\"./da.js\": 6427,\n\t\"./de\": 7435,\n\t\"./de-at\": 2871,\n\t\"./de-at.js\": 2871,\n\t\"./de-ch\": 2994,\n\t\"./de-ch.js\": 2994,\n\t\"./de.js\": 7435,\n\t\"./dv\": 2357,\n\t\"./dv.js\": 2357,\n\t\"./el\": 5649,\n\t\"./el.js\": 5649,\n\t\"./en-au\": 9961,\n\t\"./en-au.js\": 9961,\n\t\"./en-ca\": 9878,\n\t\"./en-ca.js\": 9878,\n\t\"./en-gb\": 3924,\n\t\"./en-gb.js\": 3924,\n\t\"./en-ie\": 864,\n\t\"./en-ie.js\": 864,\n\t\"./en-il\": 1579,\n\t\"./en-il.js\": 1579,\n\t\"./en-in\": 940,\n\t\"./en-in.js\": 940,\n\t\"./en-nz\": 6181,\n\t\"./en-nz.js\": 6181,\n\t\"./en-sg\": 4301,\n\t\"./en-sg.js\": 4301,\n\t\"./eo\": 5291,\n\t\"./eo.js\": 5291,\n\t\"./es\": 4529,\n\t\"./es-do\": 3764,\n\t\"./es-do.js\": 3764,\n\t\"./es-mx\": 2584,\n\t\"./es-mx.js\": 2584,\n\t\"./es-us\": 3425,\n\t\"./es-us.js\": 3425,\n\t\"./es.js\": 4529,\n\t\"./et\": 5203,\n\t\"./et.js\": 5203,\n\t\"./eu\": 678,\n\t\"./eu.js\": 678,\n\t\"./fa\": 3483,\n\t\"./fa.js\": 3483,\n\t\"./fi\": 6262,\n\t\"./fi.js\": 6262,\n\t\"./fil\": 2521,\n\t\"./fil.js\": 2521,\n\t\"./fo\": 4555,\n\t\"./fo.js\": 4555,\n\t\"./fr\": 3131,\n\t\"./fr-ca\": 8239,\n\t\"./fr-ca.js\": 8239,\n\t\"./fr-ch\": 1702,\n\t\"./fr-ch.js\": 1702,\n\t\"./fr.js\": 3131,\n\t\"./fy\": 267,\n\t\"./fy.js\": 267,\n\t\"./ga\": 3821,\n\t\"./ga.js\": 3821,\n\t\"./gd\": 1753,\n\t\"./gd.js\": 1753,\n\t\"./gl\": 4074,\n\t\"./gl.js\": 4074,\n\t\"./gom-deva\": 2762,\n\t\"./gom-deva.js\": 2762,\n\t\"./gom-latn\": 5969,\n\t\"./gom-latn.js\": 5969,\n\t\"./gu\": 2809,\n\t\"./gu.js\": 2809,\n\t\"./he\": 5402,\n\t\"./he.js\": 5402,\n\t\"./hi\": 315,\n\t\"./hi.js\": 315,\n\t\"./hr\": 410,\n\t\"./hr.js\": 410,\n\t\"./hu\": 8288,\n\t\"./hu.js\": 8288,\n\t\"./hy-am\": 7928,\n\t\"./hy-am.js\": 7928,\n\t\"./id\": 1334,\n\t\"./id.js\": 1334,\n\t\"./is\": 6959,\n\t\"./is.js\": 6959,\n\t\"./it\": 4864,\n\t\"./it-ch\": 1124,\n\t\"./it-ch.js\": 1124,\n\t\"./it.js\": 4864,\n\t\"./ja\": 6141,\n\t\"./ja.js\": 6141,\n\t\"./jv\": 9187,\n\t\"./jv.js\": 9187,\n\t\"./ka\": 2136,\n\t\"./ka.js\": 2136,\n\t\"./kk\": 4332,\n\t\"./kk.js\": 4332,\n\t\"./km\": 8607,\n\t\"./km.js\": 8607,\n\t\"./kn\": 4305,\n\t\"./kn.js\": 4305,\n\t\"./ko\": 234,\n\t\"./ko.js\": 234,\n\t\"./ku\": 6003,\n\t\"./ku.js\": 6003,\n\t\"./ky\": 5061,\n\t\"./ky.js\": 5061,\n\t\"./lb\": 2786,\n\t\"./lb.js\": 2786,\n\t\"./lo\": 6183,\n\t\"./lo.js\": 6183,\n\t\"./lt\": 29,\n\t\"./lt.js\": 29,\n\t\"./lv\": 4169,\n\t\"./lv.js\": 4169,\n\t\"./me\": 8577,\n\t\"./me.js\": 8577,\n\t\"./mi\": 8177,\n\t\"./mi.js\": 8177,\n\t\"./mk\": 337,\n\t\"./mk.js\": 337,\n\t\"./ml\": 5260,\n\t\"./ml.js\": 5260,\n\t\"./mn\": 2325,\n\t\"./mn.js\": 2325,\n\t\"./mr\": 4695,\n\t\"./mr.js\": 4695,\n\t\"./ms\": 5334,\n\t\"./ms-my\": 7151,\n\t\"./ms-my.js\": 7151,\n\t\"./ms.js\": 5334,\n\t\"./mt\": 3570,\n\t\"./mt.js\": 3570,\n\t\"./my\": 7963,\n\t\"./my.js\": 7963,\n\t\"./nb\": 8028,\n\t\"./nb.js\": 8028,\n\t\"./ne\": 6638,\n\t\"./ne.js\": 6638,\n\t\"./nl\": 302,\n\t\"./nl-be\": 6782,\n\t\"./nl-be.js\": 6782,\n\t\"./nl.js\": 302,\n\t\"./nn\": 3501,\n\t\"./nn.js\": 3501,\n\t\"./oc-lnc\": 563,\n\t\"./oc-lnc.js\": 563,\n\t\"./pa-in\": 869,\n\t\"./pa-in.js\": 869,\n\t\"./pl\": 5302,\n\t\"./pl.js\": 5302,\n\t\"./pt\": 9687,\n\t\"./pt-br\": 4884,\n\t\"./pt-br.js\": 4884,\n\t\"./pt.js\": 9687,\n\t\"./ro\": 9107,\n\t\"./ro.js\": 9107,\n\t\"./ru\": 3627,\n\t\"./ru.js\": 3627,\n\t\"./sd\": 355,\n\t\"./sd.js\": 355,\n\t\"./se\": 3427,\n\t\"./se.js\": 3427,\n\t\"./si\": 1848,\n\t\"./si.js\": 1848,\n\t\"./sk\": 4590,\n\t\"./sk.js\": 4590,\n\t\"./sl\": 184,\n\t\"./sl.js\": 184,\n\t\"./sq\": 6361,\n\t\"./sq.js\": 6361,\n\t\"./sr\": 8965,\n\t\"./sr-cyrl\": 1287,\n\t\"./sr-cyrl.js\": 1287,\n\t\"./sr.js\": 8965,\n\t\"./ss\": 5456,\n\t\"./ss.js\": 5456,\n\t\"./sv\": 451,\n\t\"./sv.js\": 451,\n\t\"./sw\": 7558,\n\t\"./sw.js\": 7558,\n\t\"./ta\": 1356,\n\t\"./ta.js\": 1356,\n\t\"./te\": 3693,\n\t\"./te.js\": 3693,\n\t\"./tet\": 1243,\n\t\"./tet.js\": 1243,\n\t\"./tg\": 2500,\n\t\"./tg.js\": 2500,\n\t\"./th\": 5768,\n\t\"./th.js\": 5768,\n\t\"./tk\": 7761,\n\t\"./tk.js\": 7761,\n\t\"./tl-ph\": 5780,\n\t\"./tl-ph.js\": 5780,\n\t\"./tlh\": 9590,\n\t\"./tlh.js\": 9590,\n\t\"./tr\": 3807,\n\t\"./tr.js\": 3807,\n\t\"./tzl\": 3857,\n\t\"./tzl.js\": 3857,\n\t\"./tzm\": 654,\n\t\"./tzm-latn\": 8806,\n\t\"./tzm-latn.js\": 8806,\n\t\"./tzm.js\": 654,\n\t\"./ug-cn\": 845,\n\t\"./ug-cn.js\": 845,\n\t\"./uk\": 9232,\n\t\"./uk.js\": 9232,\n\t\"./ur\": 7052,\n\t\"./ur.js\": 7052,\n\t\"./uz\": 7967,\n\t\"./uz-latn\": 2233,\n\t\"./uz-latn.js\": 2233,\n\t\"./uz.js\": 7967,\n\t\"./vi\": 8615,\n\t\"./vi.js\": 8615,\n\t\"./x-pseudo\": 2320,\n\t\"./x-pseudo.js\": 2320,\n\t\"./yo\": 1313,\n\t\"./yo.js\": 1313,\n\t\"./zh-cn\": 4490,\n\t\"./zh-cn.js\": 4490,\n\t\"./zh-hk\": 5910,\n\t\"./zh-hk.js\": 5910,\n\t\"./zh-mo\": 8262,\n\t\"./zh-mo.js\": 8262,\n\t\"./zh-tw\": 4223,\n\t\"./zh-tw.js\": 4223\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 6700;","/* (ignored) */","/* (ignored) */","/* (ignored) */"],"names":[],"sourceRoot":"webpack:///"}